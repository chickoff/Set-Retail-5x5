//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.8745
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный код был создан с помощью wsdl, версия=2.0.50727.3038.
// 
namespace WSCardsManagerServiceProxy {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CardsManagerServiceSoapBinding", Namespace="http://cards.crystals.ru/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(baseVO))]
    public partial class CardsManagerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback activatePresentCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback storeClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback createBonusTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCashesWithNotLoadedCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addBonusTypeToInternalCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPresentCardsStatisticOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardsByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBonusTypesByInternalCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBonusAccountsByCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback storeBonusTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardsCountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePresentCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback blockCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRejectedCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeBonusTypeFromInternalCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPersonalLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInternalCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountDeferredClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback cleanRejectedCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActionsByCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback storeInternalCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeConditionChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addClientAndSetToCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPresentCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardBonusHistoryForPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFinishRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardCreditHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback setExpirationDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardRangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllBonusTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCreditAccountByCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardCreditHistoryForPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPresentCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeCardTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addConditionChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeInternalCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeInternalCardCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActionsByCardForPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback findCardsByClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientsByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback setClientToCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeBonusTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOperationsByCardForPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePresentCardRangeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback createInternalCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback resendFailedCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardBonusHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardsNotLoadedToCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeCardRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCardRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback storePresentCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSubCardFromMainCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardsByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConditionChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientInfoByCardNumberOperationCompleted;
        
        /// <remarks/>
        public CardsManagerService(string url)
        {
            this.Url = url; 
        }
        
        /// <remarks/>
        public event activatePresentCardsCompletedEventHandler activatePresentCardsCompleted;
        
        /// <remarks/>
        public event storeClientCompletedEventHandler storeClientCompleted;
        
        /// <remarks/>
        public event createBonusTypeCompletedEventHandler createBonusTypeCompleted;
        
        /// <remarks/>
        public event getCashesWithNotLoadedCardsCompletedEventHandler getCashesWithNotLoadedCardsCompleted;
        
        /// <remarks/>
        public event addBonusTypeToInternalCardCompletedEventHandler addBonusTypeToInternalCardCompleted;
        
        /// <remarks/>
        public event getPresentCardsStatisticCompletedEventHandler getPresentCardsStatisticCompleted;
        
        /// <remarks/>
        public event getCardsByTypeCompletedEventHandler getCardsByTypeCompleted;
        
        /// <remarks/>
        public event getClientsCompletedEventHandler getClientsCompleted;
        
        /// <remarks/>
        public event getBonusTypesByInternalCardCompletedEventHandler getBonusTypesByInternalCardCompleted;
        
        /// <remarks/>
        public event getBonusAccountsByCardCompletedEventHandler getBonusAccountsByCardCompleted;
        
        /// <remarks/>
        public event storeBonusTypeCompletedEventHandler storeBonusTypeCompleted;
        
        /// <remarks/>
        public event getCardsCountsCompletedEventHandler getCardsCountsCompleted;
        
        /// <remarks/>
        public event changePresentCardCompletedEventHandler changePresentCardCompleted;
        
        /// <remarks/>
        public event blockCardCompletedEventHandler blockCardCompleted;
        
        /// <remarks/>
        public event getRejectedCardsCompletedEventHandler getRejectedCardsCompleted;
        
        /// <remarks/>
        public event removeBonusTypeFromInternalCardCompletedEventHandler removeBonusTypeFromInternalCardCompleted;
        
        /// <remarks/>
        public event setPersonalLimitCompletedEventHandler setPersonalLimitCompleted;
        
        /// <remarks/>
        public event getInternalCardsCompletedEventHandler getInternalCardsCompleted;
        
        /// <remarks/>
        public event getCountDeferredClientsCompletedEventHandler getCountDeferredClientsCompleted;
        
        /// <remarks/>
        public event cleanRejectedCardsCompletedEventHandler cleanRejectedCardsCompleted;
        
        /// <remarks/>
        public event getCardStatusCompletedEventHandler getCardStatusCompleted;
        
        /// <remarks/>
        public event createNewCardCompletedEventHandler createNewCardCompleted;
        
        /// <remarks/>
        public event getActionsByCardCompletedEventHandler getActionsByCardCompleted;
        
        /// <remarks/>
        public event storeInternalCardsCompletedEventHandler storeInternalCardsCompleted;
        
        /// <remarks/>
        public event removeConditionChangeCompletedEventHandler removeConditionChangeCompleted;
        
        /// <remarks/>
        public event addClientAndSetToCardCompletedEventHandler addClientAndSetToCardCompleted;
        
        /// <remarks/>
        public event getPresentCardsCompletedEventHandler getPresentCardsCompleted;
        
        /// <remarks/>
        public event getCardBonusHistoryForPrintCompletedEventHandler getCardBonusHistoryForPrintCompleted;
        
        /// <remarks/>
        public event getFinishRangeCompletedEventHandler getFinishRangeCompleted;
        
        /// <remarks/>
        public event getCardCreditHistoryCompletedEventHandler getCardCreditHistoryCompleted;
        
        /// <remarks/>
        public event setExpirationDateCompletedEventHandler setExpirationDateCompleted;
        
        /// <remarks/>
        public event getCardRangesCompletedEventHandler getCardRangesCompleted;
        
        /// <remarks/>
        public event getAllBonusTypesCompletedEventHandler getAllBonusTypesCompleted;
        
        /// <remarks/>
        public event getCreditAccountByCardCompletedEventHandler getCreditAccountByCardCompleted;
        
        /// <remarks/>
        public event getCardCreditHistoryForPrintCompletedEventHandler getCardCreditHistoryForPrintCompleted;
        
        /// <remarks/>
        public event createPresentCardsCompletedEventHandler createPresentCardsCompleted;
        
        /// <remarks/>
        public event removeCardTypeCompletedEventHandler removeCardTypeCompleted;
        
        /// <remarks/>
        public event addConditionChangeCompletedEventHandler addConditionChangeCompleted;
        
        /// <remarks/>
        public event changeInternalCardCompletedEventHandler changeInternalCardCompleted;
        
        /// <remarks/>
        public event changeInternalCardCategoryCompletedEventHandler changeInternalCardCategoryCompleted;
        
        /// <remarks/>
        public event getActionsByCardForPrintCompletedEventHandler getActionsByCardForPrintCompleted;
        
        /// <remarks/>
        public event findCardsByClientCompletedEventHandler findCardsByClientCompleted;
        
        /// <remarks/>
        public event getClientsByFilterCompletedEventHandler getClientsByFilterCompleted;
        
        /// <remarks/>
        public event setClientToCardCompletedEventHandler setClientToCardCompleted;
        
        /// <remarks/>
        public event removeBonusTypeCompletedEventHandler removeBonusTypeCompleted;
        
        /// <remarks/>
        public event getOperationsByCardForPrintCompletedEventHandler getOperationsByCardForPrintCompleted;
        
        /// <remarks/>
        public event changePresentCardRangeStatusCompletedEventHandler changePresentCardRangeStatusCompleted;
        
        /// <remarks/>
        public event createInternalCardsCompletedEventHandler createInternalCardsCompleted;
        
        /// <remarks/>
        public event resendFailedCardsCompletedEventHandler resendFailedCardsCompleted;
        
        /// <remarks/>
        public event getCardBonusHistoryCompletedEventHandler getCardBonusHistoryCompleted;
        
        /// <remarks/>
        public event getCardsNotLoadedToCashCompletedEventHandler getCardsNotLoadedToCashCompleted;
        
        /// <remarks/>
        public event removeCardRangeCompletedEventHandler removeCardRangeCompleted;
        
        /// <remarks/>
        public event addCardRangeCompletedEventHandler addCardRangeCompleted;
        
        /// <remarks/>
        public event storePresentCardsCompletedEventHandler storePresentCardsCompleted;
        
        /// <remarks/>
        public event removeSubCardFromMainCardCompletedEventHandler removeSubCardFromMainCardCompleted;
        
        /// <remarks/>
        public event getCardsByFilterCompletedEventHandler getCardsByFilterCompleted;
        
        /// <remarks/>
        public event getConditionChangesCompletedEventHandler getConditionChangesCompleted;
        
        /// <remarks/>
        public event getClientInfoByCardNumberCompletedEventHandler getClientInfoByCardNumberCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void activatePresentCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] userVO user) {
            this.Invoke("activatePresentCards", new object[] {
                        sessionId,
                        start,
                        count,
                        countSpecified,
                        user});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginactivatePresentCards(string sessionId, string start, long count, bool countSpecified, userVO user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("activatePresentCards", new object[] {
                        sessionId,
                        start,
                        count,
                        countSpecified,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndactivatePresentCards(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void activatePresentCardsAsync(string sessionId, string start, long count, bool countSpecified, userVO user) {
            this.activatePresentCardsAsync(sessionId, start, count, countSpecified, user, null);
        }
        
        /// <remarks/>
        public void activatePresentCardsAsync(string sessionId, string start, long count, bool countSpecified, userVO user, object userState) {
            if ((this.activatePresentCardsOperationCompleted == null)) {
                this.activatePresentCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivatePresentCardsOperationCompleted);
            }
            this.InvokeAsync("activatePresentCards", new object[] {
                        sessionId,
                        start,
                        count,
                        countSpecified,
                        user}, this.activatePresentCardsOperationCompleted, userState);
        }
        
        private void OnactivatePresentCardsOperationCompleted(object arg) {
            if ((this.activatePresentCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activatePresentCardsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public clientVO storeClient([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] clientVO client) {
            object[] results = this.Invoke("storeClient", new object[] {
                        sessionId,
                        client});
            return ((clientVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstoreClient(string sessionId, clientVO client, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("storeClient", new object[] {
                        sessionId,
                        client}, callback, asyncState);
        }
        
        /// <remarks/>
        public clientVO EndstoreClient(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((clientVO)(results[0]));
        }
        
        /// <remarks/>
        public void storeClientAsync(string sessionId, clientVO client) {
            this.storeClientAsync(sessionId, client, null);
        }
        
        /// <remarks/>
        public void storeClientAsync(string sessionId, clientVO client, object userState) {
            if ((this.storeClientOperationCompleted == null)) {
                this.storeClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstoreClientOperationCompleted);
            }
            this.InvokeAsync("storeClient", new object[] {
                        sessionId,
                        client}, this.storeClientOperationCompleted, userState);
        }
        
        private void OnstoreClientOperationCompleted(object arg) {
            if ((this.storeClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.storeClientCompleted(this, new storeClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bonusAccountTypeVO createBonusType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bonusAccountTypeVO bonusAccountType) {
            object[] results = this.Invoke("createBonusType", new object[] {
                        sessionId,
                        bonusAccountType});
            return ((bonusAccountTypeVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateBonusType(string sessionId, bonusAccountTypeVO bonusAccountType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createBonusType", new object[] {
                        sessionId,
                        bonusAccountType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bonusAccountTypeVO EndcreateBonusType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bonusAccountTypeVO)(results[0]));
        }
        
        /// <remarks/>
        public void createBonusTypeAsync(string sessionId, bonusAccountTypeVO bonusAccountType) {
            this.createBonusTypeAsync(sessionId, bonusAccountType, null);
        }
        
        /// <remarks/>
        public void createBonusTypeAsync(string sessionId, bonusAccountTypeVO bonusAccountType, object userState) {
            if ((this.createBonusTypeOperationCompleted == null)) {
                this.createBonusTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateBonusTypeOperationCompleted);
            }
            this.InvokeAsync("createBonusType", new object[] {
                        sessionId,
                        bonusAccountType}, this.createBonusTypeOperationCompleted, userState);
        }
        
        private void OncreateBonusTypeOperationCompleted(object arg) {
            if ((this.createBonusTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createBonusTypeCompleted(this, new createBonusTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cashExtensionVO[] getCashesWithNotLoadedCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
            object[] results = this.Invoke("getCashesWithNotLoadedCards", new object[] {
                        sessionId});
            return ((cashExtensionVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCashesWithNotLoadedCards(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCashesWithNotLoadedCards", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public cashExtensionVO[] EndgetCashesWithNotLoadedCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cashExtensionVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getCashesWithNotLoadedCardsAsync(string sessionId) {
            this.getCashesWithNotLoadedCardsAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void getCashesWithNotLoadedCardsAsync(string sessionId, object userState) {
            if ((this.getCashesWithNotLoadedCardsOperationCompleted == null)) {
                this.getCashesWithNotLoadedCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCashesWithNotLoadedCardsOperationCompleted);
            }
            this.InvokeAsync("getCashesWithNotLoadedCards", new object[] {
                        sessionId}, this.getCashesWithNotLoadedCardsOperationCompleted, userState);
        }
        
        private void OngetCashesWithNotLoadedCardsOperationCompleted(object arg) {
            if ((this.getCashesWithNotLoadedCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCashesWithNotLoadedCardsCompleted(this, new getCashesWithNotLoadedCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addBonusTypeToInternalCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bonusAccountTypeVO bonusAccountType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardTypeVO cardType) {
            this.Invoke("addBonusTypeToInternalCard", new object[] {
                        sessionId,
                        bonusAccountType,
                        cardType});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddBonusTypeToInternalCard(string sessionId, bonusAccountTypeVO bonusAccountType, cardTypeVO cardType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addBonusTypeToInternalCard", new object[] {
                        sessionId,
                        bonusAccountType,
                        cardType}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndaddBonusTypeToInternalCard(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void addBonusTypeToInternalCardAsync(string sessionId, bonusAccountTypeVO bonusAccountType, cardTypeVO cardType) {
            this.addBonusTypeToInternalCardAsync(sessionId, bonusAccountType, cardType, null);
        }
        
        /// <remarks/>
        public void addBonusTypeToInternalCardAsync(string sessionId, bonusAccountTypeVO bonusAccountType, cardTypeVO cardType, object userState) {
            if ((this.addBonusTypeToInternalCardOperationCompleted == null)) {
                this.addBonusTypeToInternalCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddBonusTypeToInternalCardOperationCompleted);
            }
            this.InvokeAsync("addBonusTypeToInternalCard", new object[] {
                        sessionId,
                        bonusAccountType,
                        cardType}, this.addBonusTypeToInternalCardOperationCompleted, userState);
        }
        
        private void OnaddBonusTypeToInternalCardOperationCompleted(object arg) {
            if ((this.addBonusTypeToInternalCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addBonusTypeToInternalCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public presentCardsStatisticVO getPresentCardsStatistic([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long categoryId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool categoryIdSpecified) {
            object[] results = this.Invoke("getPresentCardsStatistic", new object[] {
                        sessionId,
                        categoryId,
                        categoryIdSpecified});
            return ((presentCardsStatisticVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPresentCardsStatistic(string sessionId, long categoryId, bool categoryIdSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPresentCardsStatistic", new object[] {
                        sessionId,
                        categoryId,
                        categoryIdSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public presentCardsStatisticVO EndgetPresentCardsStatistic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((presentCardsStatisticVO)(results[0]));
        }
        
        /// <remarks/>
        public void getPresentCardsStatisticAsync(string sessionId, long categoryId, bool categoryIdSpecified) {
            this.getPresentCardsStatisticAsync(sessionId, categoryId, categoryIdSpecified, null);
        }
        
        /// <remarks/>
        public void getPresentCardsStatisticAsync(string sessionId, long categoryId, bool categoryIdSpecified, object userState) {
            if ((this.getPresentCardsStatisticOperationCompleted == null)) {
                this.getPresentCardsStatisticOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPresentCardsStatisticOperationCompleted);
            }
            this.InvokeAsync("getPresentCardsStatistic", new object[] {
                        sessionId,
                        categoryId,
                        categoryIdSpecified}, this.getPresentCardsStatisticOperationCompleted, userState);
        }
        
        private void OngetPresentCardsStatisticOperationCompleted(object arg) {
            if ((this.getPresentCardsStatisticCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPresentCardsStatisticCompleted(this, new getPresentCardsStatisticCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO[] getCardsByType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardTypeVO cardType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("getCardsByType", new object[] {
                        sessionId,
                        cardType,
                        start,
                        startSpecified,
                        count,
                        countSpecified});
            return ((cardVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardsByType(string sessionId, cardTypeVO cardType, int start, bool startSpecified, int count, bool countSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardsByType", new object[] {
                        sessionId,
                        cardType,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO[] EndgetCardsByType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getCardsByTypeAsync(string sessionId, cardTypeVO cardType, int start, bool startSpecified, int count, bool countSpecified) {
            this.getCardsByTypeAsync(sessionId, cardType, start, startSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void getCardsByTypeAsync(string sessionId, cardTypeVO cardType, int start, bool startSpecified, int count, bool countSpecified, object userState) {
            if ((this.getCardsByTypeOperationCompleted == null)) {
                this.getCardsByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardsByTypeOperationCompleted);
            }
            this.InvokeAsync("getCardsByType", new object[] {
                        sessionId,
                        cardType,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, this.getCardsByTypeOperationCompleted, userState);
        }
        
        private void OngetCardsByTypeOperationCompleted(object arg) {
            if ((this.getCardsByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardsByTypeCompleted(this, new getCardsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public clientVO[] getClients([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] clientFilterVO filter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("getClients", new object[] {
                        sessionId,
                        filter,
                        start,
                        startSpecified,
                        count,
                        countSpecified});
            return ((clientVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetClients(string sessionId, clientFilterVO filter, int start, bool startSpecified, int count, bool countSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getClients", new object[] {
                        sessionId,
                        filter,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public clientVO[] EndgetClients(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((clientVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getClientsAsync(string sessionId, clientFilterVO filter, int start, bool startSpecified, int count, bool countSpecified) {
            this.getClientsAsync(sessionId, filter, start, startSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void getClientsAsync(string sessionId, clientFilterVO filter, int start, bool startSpecified, int count, bool countSpecified, object userState) {
            if ((this.getClientsOperationCompleted == null)) {
                this.getClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientsOperationCompleted);
            }
            this.InvokeAsync("getClients", new object[] {
                        sessionId,
                        filter,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, this.getClientsOperationCompleted, userState);
        }
        
        private void OngetClientsOperationCompleted(object arg) {
            if ((this.getClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientsCompleted(this, new getClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bonusAccountTypeVO[] getBonusTypesByInternalCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardTypeVO cardType) {
            object[] results = this.Invoke("getBonusTypesByInternalCard", new object[] {
                        sessionId,
                        cardType});
            return ((bonusAccountTypeVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetBonusTypesByInternalCard(string sessionId, cardTypeVO cardType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getBonusTypesByInternalCard", new object[] {
                        sessionId,
                        cardType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bonusAccountTypeVO[] EndgetBonusTypesByInternalCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bonusAccountTypeVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getBonusTypesByInternalCardAsync(string sessionId, cardTypeVO cardType) {
            this.getBonusTypesByInternalCardAsync(sessionId, cardType, null);
        }
        
        /// <remarks/>
        public void getBonusTypesByInternalCardAsync(string sessionId, cardTypeVO cardType, object userState) {
            if ((this.getBonusTypesByInternalCardOperationCompleted == null)) {
                this.getBonusTypesByInternalCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBonusTypesByInternalCardOperationCompleted);
            }
            this.InvokeAsync("getBonusTypesByInternalCard", new object[] {
                        sessionId,
                        cardType}, this.getBonusTypesByInternalCardOperationCompleted, userState);
        }
        
        private void OngetBonusTypesByInternalCardOperationCompleted(object arg) {
            if ((this.getBonusTypesByInternalCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBonusTypesByInternalCardCompleted(this, new getBonusTypesByInternalCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bonusAccountVO[] getBonusAccountsByCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card) {
            object[] results = this.Invoke("getBonusAccountsByCard", new object[] {
                        sessionId,
                        card});
            return ((bonusAccountVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetBonusAccountsByCard(string sessionId, cardVO card, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getBonusAccountsByCard", new object[] {
                        sessionId,
                        card}, callback, asyncState);
        }
        
        /// <remarks/>
        public bonusAccountVO[] EndgetBonusAccountsByCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bonusAccountVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getBonusAccountsByCardAsync(string sessionId, cardVO card) {
            this.getBonusAccountsByCardAsync(sessionId, card, null);
        }
        
        /// <remarks/>
        public void getBonusAccountsByCardAsync(string sessionId, cardVO card, object userState) {
            if ((this.getBonusAccountsByCardOperationCompleted == null)) {
                this.getBonusAccountsByCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBonusAccountsByCardOperationCompleted);
            }
            this.InvokeAsync("getBonusAccountsByCard", new object[] {
                        sessionId,
                        card}, this.getBonusAccountsByCardOperationCompleted, userState);
        }
        
        private void OngetBonusAccountsByCardOperationCompleted(object arg) {
            if ((this.getBonusAccountsByCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBonusAccountsByCardCompleted(this, new getBonusAccountsByCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bonusAccountTypeVO storeBonusType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bonusAccountTypeVO bonusAccountType) {
            object[] results = this.Invoke("storeBonusType", new object[] {
                        sessionId,
                        bonusAccountType});
            return ((bonusAccountTypeVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstoreBonusType(string sessionId, bonusAccountTypeVO bonusAccountType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("storeBonusType", new object[] {
                        sessionId,
                        bonusAccountType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bonusAccountTypeVO EndstoreBonusType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bonusAccountTypeVO)(results[0]));
        }
        
        /// <remarks/>
        public void storeBonusTypeAsync(string sessionId, bonusAccountTypeVO bonusAccountType) {
            this.storeBonusTypeAsync(sessionId, bonusAccountType, null);
        }
        
        /// <remarks/>
        public void storeBonusTypeAsync(string sessionId, bonusAccountTypeVO bonusAccountType, object userState) {
            if ((this.storeBonusTypeOperationCompleted == null)) {
                this.storeBonusTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstoreBonusTypeOperationCompleted);
            }
            this.InvokeAsync("storeBonusType", new object[] {
                        sessionId,
                        bonusAccountType}, this.storeBonusTypeOperationCompleted, userState);
        }
        
        private void OnstoreBonusTypeOperationCompleted(object arg) {
            if ((this.storeBonusTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.storeBonusTypeCompleted(this, new storeBonusTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public productInCategoryCountVO[] getCardsCounts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
            object[] results = this.Invoke("getCardsCounts", new object[] {
                        sessionId});
            return ((productInCategoryCountVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardsCounts(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardsCounts", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public productInCategoryCountVO[] EndgetCardsCounts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((productInCategoryCountVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getCardsCountsAsync(string sessionId) {
            this.getCardsCountsAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void getCardsCountsAsync(string sessionId, object userState) {
            if ((this.getCardsCountsOperationCompleted == null)) {
                this.getCardsCountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardsCountsOperationCompleted);
            }
            this.InvokeAsync("getCardsCounts", new object[] {
                        sessionId}, this.getCardsCountsOperationCompleted, userState);
        }
        
        private void OngetCardsCountsOperationCompleted(object arg) {
            if ((this.getCardsCountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardsCountsCompleted(this, new getCardsCountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO changePresentCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO oldCard, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO newCard, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] userVO user, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardBlockingReason cause, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool causeSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string comment) {
            object[] results = this.Invoke("changePresentCard", new object[] {
                        sessionId,
                        oldCard,
                        newCard,
                        user,
                        cause,
                        causeSpecified,
                        comment});
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangePresentCard(string sessionId, cardVO oldCard, cardVO newCard, userVO user, cardBlockingReason cause, bool causeSpecified, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changePresentCard", new object[] {
                        sessionId,
                        oldCard,
                        newCard,
                        user,
                        cause,
                        causeSpecified,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO EndchangePresentCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public void changePresentCardAsync(string sessionId, cardVO oldCard, cardVO newCard, userVO user, cardBlockingReason cause, bool causeSpecified, string comment) {
            this.changePresentCardAsync(sessionId, oldCard, newCard, user, cause, causeSpecified, comment, null);
        }
        
        /// <remarks/>
        public void changePresentCardAsync(string sessionId, cardVO oldCard, cardVO newCard, userVO user, cardBlockingReason cause, bool causeSpecified, string comment, object userState) {
            if ((this.changePresentCardOperationCompleted == null)) {
                this.changePresentCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePresentCardOperationCompleted);
            }
            this.InvokeAsync("changePresentCard", new object[] {
                        sessionId,
                        oldCard,
                        newCard,
                        user,
                        cause,
                        causeSpecified,
                        comment}, this.changePresentCardOperationCompleted, userState);
        }
        
        private void OnchangePresentCardOperationCompleted(object arg) {
            if ((this.changePresentCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePresentCardCompleted(this, new changePresentCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO blockCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardBlockingReason cause, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool causeSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string comment, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] userVO user) {
            object[] results = this.Invoke("blockCard", new object[] {
                        sessionId,
                        card,
                        cause,
                        causeSpecified,
                        comment,
                        user});
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginblockCard(string sessionId, cardVO card, cardBlockingReason cause, bool causeSpecified, string comment, userVO user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("blockCard", new object[] {
                        sessionId,
                        card,
                        cause,
                        causeSpecified,
                        comment,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO EndblockCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public void blockCardAsync(string sessionId, cardVO card, cardBlockingReason cause, bool causeSpecified, string comment, userVO user) {
            this.blockCardAsync(sessionId, card, cause, causeSpecified, comment, user, null);
        }
        
        /// <remarks/>
        public void blockCardAsync(string sessionId, cardVO card, cardBlockingReason cause, bool causeSpecified, string comment, userVO user, object userState) {
            if ((this.blockCardOperationCompleted == null)) {
                this.blockCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnblockCardOperationCompleted);
            }
            this.InvokeAsync("blockCard", new object[] {
                        sessionId,
                        card,
                        cause,
                        causeSpecified,
                        comment,
                        user}, this.blockCardOperationCompleted, userState);
        }
        
        private void OnblockCardOperationCompleted(object arg) {
            if ((this.blockCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.blockCardCompleted(this, new blockCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rejectedCardVO[] getRejectedCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
            object[] results = this.Invoke("getRejectedCards", new object[] {
                        sessionId});
            return ((rejectedCardVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetRejectedCards(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getRejectedCards", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public rejectedCardVO[] EndgetRejectedCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((rejectedCardVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getRejectedCardsAsync(string sessionId) {
            this.getRejectedCardsAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void getRejectedCardsAsync(string sessionId, object userState) {
            if ((this.getRejectedCardsOperationCompleted == null)) {
                this.getRejectedCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRejectedCardsOperationCompleted);
            }
            this.InvokeAsync("getRejectedCards", new object[] {
                        sessionId}, this.getRejectedCardsOperationCompleted, userState);
        }
        
        private void OngetRejectedCardsOperationCompleted(object arg) {
            if ((this.getRejectedCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRejectedCardsCompleted(this, new getRejectedCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeBonusTypeFromInternalCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bonusAccountTypeVO bonusAccountType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardTypeVO cardType) {
            this.Invoke("removeBonusTypeFromInternalCard", new object[] {
                        sessionId,
                        bonusAccountType,
                        cardType});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveBonusTypeFromInternalCard(string sessionId, bonusAccountTypeVO bonusAccountType, cardTypeVO cardType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeBonusTypeFromInternalCard", new object[] {
                        sessionId,
                        bonusAccountType,
                        cardType}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremoveBonusTypeFromInternalCard(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void removeBonusTypeFromInternalCardAsync(string sessionId, bonusAccountTypeVO bonusAccountType, cardTypeVO cardType) {
            this.removeBonusTypeFromInternalCardAsync(sessionId, bonusAccountType, cardType, null);
        }
        
        /// <remarks/>
        public void removeBonusTypeFromInternalCardAsync(string sessionId, bonusAccountTypeVO bonusAccountType, cardTypeVO cardType, object userState) {
            if ((this.removeBonusTypeFromInternalCardOperationCompleted == null)) {
                this.removeBonusTypeFromInternalCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveBonusTypeFromInternalCardOperationCompleted);
            }
            this.InvokeAsync("removeBonusTypeFromInternalCard", new object[] {
                        sessionId,
                        bonusAccountType,
                        cardType}, this.removeBonusTypeFromInternalCardOperationCompleted, userState);
        }
        
        private void OnremoveBonusTypeFromInternalCardOperationCompleted(object arg) {
            if ((this.removeBonusTypeFromInternalCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeBonusTypeFromInternalCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public creditAccountVO setPersonalLimit([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] creditAccountVO creditAccountVO) {
            object[] results = this.Invoke("setPersonalLimit", new object[] {
                        sessionId,
                        creditAccountVO});
            return ((creditAccountVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetPersonalLimit(string sessionId, creditAccountVO creditAccountVO, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setPersonalLimit", new object[] {
                        sessionId,
                        creditAccountVO}, callback, asyncState);
        }
        
        /// <remarks/>
        public creditAccountVO EndsetPersonalLimit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((creditAccountVO)(results[0]));
        }
        
        /// <remarks/>
        public void setPersonalLimitAsync(string sessionId, creditAccountVO creditAccountVO) {
            this.setPersonalLimitAsync(sessionId, creditAccountVO, null);
        }
        
        /// <remarks/>
        public void setPersonalLimitAsync(string sessionId, creditAccountVO creditAccountVO, object userState) {
            if ((this.setPersonalLimitOperationCompleted == null)) {
                this.setPersonalLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPersonalLimitOperationCompleted);
            }
            this.InvokeAsync("setPersonalLimit", new object[] {
                        sessionId,
                        creditAccountVO}, this.setPersonalLimitOperationCompleted, userState);
        }
        
        private void OnsetPersonalLimitOperationCompleted(object arg) {
            if ((this.setPersonalLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPersonalLimitCompleted(this, new setPersonalLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public internalCardsVO[] getInternalCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("getInternalCards", new object[] {
                        sessionId,
                        start,
                        startSpecified,
                        count,
                        countSpecified});
            return ((internalCardsVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetInternalCards(string sessionId, int start, bool startSpecified, int count, bool countSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getInternalCards", new object[] {
                        sessionId,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public internalCardsVO[] EndgetInternalCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((internalCardsVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getInternalCardsAsync(string sessionId, int start, bool startSpecified, int count, bool countSpecified) {
            this.getInternalCardsAsync(sessionId, start, startSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void getInternalCardsAsync(string sessionId, int start, bool startSpecified, int count, bool countSpecified, object userState) {
            if ((this.getInternalCardsOperationCompleted == null)) {
                this.getInternalCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInternalCardsOperationCompleted);
            }
            this.InvokeAsync("getInternalCards", new object[] {
                        sessionId,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, this.getInternalCardsOperationCompleted, userState);
        }
        
        private void OngetInternalCardsOperationCompleted(object arg) {
            if ((this.getInternalCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInternalCardsCompleted(this, new getInternalCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getCountDeferredClients([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out long @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("getCountDeferredClients", new object[0]);
            @return = ((long)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCountDeferredClients(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCountDeferredClients", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndgetCountDeferredClients(System.IAsyncResult asyncResult, out long @return, out bool returnSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((long)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void getCountDeferredClientsAsync() {
            this.getCountDeferredClientsAsync(null);
        }
        
        /// <remarks/>
        public void getCountDeferredClientsAsync(object userState) {
            if ((this.getCountDeferredClientsOperationCompleted == null)) {
                this.getCountDeferredClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountDeferredClientsOperationCompleted);
            }
            this.InvokeAsync("getCountDeferredClients", new object[0], this.getCountDeferredClientsOperationCompleted, userState);
        }
        
        private void OngetCountDeferredClientsOperationCompleted(object arg) {
            if ((this.getCountDeferredClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountDeferredClientsCompleted(this, new getCountDeferredClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool cleanRejectedCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
            object[] results = this.Invoke("cleanRejectedCards", new object[] {
                        sessionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincleanRejectedCards(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("cleanRejectedCards", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcleanRejectedCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void cleanRejectedCardsAsync(string sessionId) {
            this.cleanRejectedCardsAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void cleanRejectedCardsAsync(string sessionId, object userState) {
            if ((this.cleanRejectedCardsOperationCompleted == null)) {
                this.cleanRejectedCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncleanRejectedCardsOperationCompleted);
            }
            this.InvokeAsync("cleanRejectedCards", new object[] {
                        sessionId}, this.cleanRejectedCardsOperationCompleted, userState);
        }
        
        private void OncleanRejectedCardsOperationCompleted(object arg) {
            if ((this.cleanRejectedCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cleanRejectedCardsCompleted(this, new cleanRejectedCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardStatusResponce getCardStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cardNumber) {
            object[] results = this.Invoke("getCardStatus", new object[] {
                        cardNumber});
            return ((cardStatusResponce)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardStatus(string cardNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardStatus", new object[] {
                        cardNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardStatusResponce EndgetCardStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardStatusResponce)(results[0]));
        }
        
        /// <remarks/>
        public void getCardStatusAsync(string cardNumber) {
            this.getCardStatusAsync(cardNumber, null);
        }
        
        /// <remarks/>
        public void getCardStatusAsync(string cardNumber, object userState) {
            if ((this.getCardStatusOperationCompleted == null)) {
                this.getCardStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardStatusOperationCompleted);
            }
            this.InvokeAsync("getCardStatus", new object[] {
                        cardNumber}, this.getCardStatusOperationCompleted, userState);
        }
        
        private void OngetCardStatusOperationCompleted(object arg) {
            if ((this.getCardStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardStatusCompleted(this, new getCardStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO createNewCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO cardVo) {
            object[] results = this.Invoke("createNewCard", new object[] {
                        sessionId,
                        cardVo});
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateNewCard(string sessionId, cardVO cardVo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createNewCard", new object[] {
                        sessionId,
                        cardVo}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO EndcreateNewCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public void createNewCardAsync(string sessionId, cardVO cardVo) {
            this.createNewCardAsync(sessionId, cardVo, null);
        }
        
        /// <remarks/>
        public void createNewCardAsync(string sessionId, cardVO cardVo, object userState) {
            if ((this.createNewCardOperationCompleted == null)) {
                this.createNewCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewCardOperationCompleted);
            }
            this.InvokeAsync("createNewCard", new object[] {
                        sessionId,
                        cardVo}, this.createNewCardOperationCompleted, userState);
        }
        
        private void OncreateNewCardOperationCompleted(object arg) {
            if ((this.createNewCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewCardCompleted(this, new createNewCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public actionVO[] getActionsByCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card) {
            object[] results = this.Invoke("getActionsByCard", new object[] {
                        sessionId,
                        card});
            return ((actionVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetActionsByCard(string sessionId, cardVO card, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getActionsByCard", new object[] {
                        sessionId,
                        card}, callback, asyncState);
        }
        
        /// <remarks/>
        public actionVO[] EndgetActionsByCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((actionVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getActionsByCardAsync(string sessionId, cardVO card) {
            this.getActionsByCardAsync(sessionId, card, null);
        }
        
        /// <remarks/>
        public void getActionsByCardAsync(string sessionId, cardVO card, object userState) {
            if ((this.getActionsByCardOperationCompleted == null)) {
                this.getActionsByCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActionsByCardOperationCompleted);
            }
            this.InvokeAsync("getActionsByCard", new object[] {
                        sessionId,
                        card}, this.getActionsByCardOperationCompleted, userState);
        }
        
        private void OngetActionsByCardOperationCompleted(object arg) {
            if ((this.getActionsByCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActionsByCardCompleted(this, new getActionsByCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public internalCardsVO storeInternalCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] internalCardsVO cards) {
            object[] results = this.Invoke("storeInternalCards", new object[] {
                        sessionId,
                        cards});
            return ((internalCardsVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstoreInternalCards(string sessionId, internalCardsVO cards, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("storeInternalCards", new object[] {
                        sessionId,
                        cards}, callback, asyncState);
        }
        
        /// <remarks/>
        public internalCardsVO EndstoreInternalCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((internalCardsVO)(results[0]));
        }
        
        /// <remarks/>
        public void storeInternalCardsAsync(string sessionId, internalCardsVO cards) {
            this.storeInternalCardsAsync(sessionId, cards, null);
        }
        
        /// <remarks/>
        public void storeInternalCardsAsync(string sessionId, internalCardsVO cards, object userState) {
            if ((this.storeInternalCardsOperationCompleted == null)) {
                this.storeInternalCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstoreInternalCardsOperationCompleted);
            }
            this.InvokeAsync("storeInternalCards", new object[] {
                        sessionId,
                        cards}, this.storeInternalCardsOperationCompleted, userState);
        }
        
        private void OnstoreInternalCardsOperationCompleted(object arg) {
            if ((this.storeInternalCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.storeInternalCardsCompleted(this, new storeInternalCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeConditionChange([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] conditionChangeVO conditionChange) {
            this.Invoke("removeConditionChange", new object[] {
                        sessionId,
                        conditionChange});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveConditionChange(string sessionId, conditionChangeVO conditionChange, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeConditionChange", new object[] {
                        sessionId,
                        conditionChange}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremoveConditionChange(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void removeConditionChangeAsync(string sessionId, conditionChangeVO conditionChange) {
            this.removeConditionChangeAsync(sessionId, conditionChange, null);
        }
        
        /// <remarks/>
        public void removeConditionChangeAsync(string sessionId, conditionChangeVO conditionChange, object userState) {
            if ((this.removeConditionChangeOperationCompleted == null)) {
                this.removeConditionChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveConditionChangeOperationCompleted);
            }
            this.InvokeAsync("removeConditionChange", new object[] {
                        sessionId,
                        conditionChange}, this.removeConditionChangeOperationCompleted, userState);
        }
        
        private void OnremoveConditionChangeOperationCompleted(object arg) {
            if ((this.removeConditionChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeConditionChangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO addClientAndSetToCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] clientVO client) {
            object[] results = this.Invoke("addClientAndSetToCard", new object[] {
                        sessionId,
                        card,
                        client});
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddClientAndSetToCard(string sessionId, cardVO card, clientVO client, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addClientAndSetToCard", new object[] {
                        sessionId,
                        card,
                        client}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO EndaddClientAndSetToCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public void addClientAndSetToCardAsync(string sessionId, cardVO card, clientVO client) {
            this.addClientAndSetToCardAsync(sessionId, card, client, null);
        }
        
        /// <remarks/>
        public void addClientAndSetToCardAsync(string sessionId, cardVO card, clientVO client, object userState) {
            if ((this.addClientAndSetToCardOperationCompleted == null)) {
                this.addClientAndSetToCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddClientAndSetToCardOperationCompleted);
            }
            this.InvokeAsync("addClientAndSetToCard", new object[] {
                        sessionId,
                        card,
                        client}, this.addClientAndSetToCardOperationCompleted, userState);
        }
        
        private void OnaddClientAndSetToCardOperationCompleted(object arg) {
            if ((this.addClientAndSetToCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addClientAndSetToCardCompleted(this, new addClientAndSetToCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public presentCardsVO[] getPresentCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("getPresentCards", new object[] {
                        sessionId,
                        start,
                        startSpecified,
                        count,
                        countSpecified});
            return ((presentCardsVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPresentCards(string sessionId, int start, bool startSpecified, int count, bool countSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPresentCards", new object[] {
                        sessionId,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public presentCardsVO[] EndgetPresentCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((presentCardsVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getPresentCardsAsync(string sessionId, int start, bool startSpecified, int count, bool countSpecified) {
            this.getPresentCardsAsync(sessionId, start, startSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void getPresentCardsAsync(string sessionId, int start, bool startSpecified, int count, bool countSpecified, object userState) {
            if ((this.getPresentCardsOperationCompleted == null)) {
                this.getPresentCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPresentCardsOperationCompleted);
            }
            this.InvokeAsync("getPresentCards", new object[] {
                        sessionId,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, this.getPresentCardsOperationCompleted, userState);
        }
        
        private void OngetPresentCardsOperationCompleted(object arg) {
            if ((this.getPresentCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPresentCardsCompleted(this, new getPresentCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getCardBonusHistoryForPrint([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampPeriod period) {
            object[] results = this.Invoke("getCardBonusHistoryForPrint", new object[] {
                        sessionId,
                        card,
                        period});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardBonusHistoryForPrint(string sessionId, cardVO card, timestampPeriod period, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardBonusHistoryForPrint", new object[] {
                        sessionId,
                        card,
                        period}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetCardBonusHistoryForPrint(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCardBonusHistoryForPrintAsync(string sessionId, cardVO card, timestampPeriod period) {
            this.getCardBonusHistoryForPrintAsync(sessionId, card, period, null);
        }
        
        /// <remarks/>
        public void getCardBonusHistoryForPrintAsync(string sessionId, cardVO card, timestampPeriod period, object userState) {
            if ((this.getCardBonusHistoryForPrintOperationCompleted == null)) {
                this.getCardBonusHistoryForPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardBonusHistoryForPrintOperationCompleted);
            }
            this.InvokeAsync("getCardBonusHistoryForPrint", new object[] {
                        sessionId,
                        card,
                        period}, this.getCardBonusHistoryForPrintOperationCompleted, userState);
        }
        
        private void OngetCardBonusHistoryForPrintOperationCompleted(object arg) {
            if ((this.getCardBonusHistoryForPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardBonusHistoryForPrintCompleted(this, new getCardBonusHistoryForPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardRangeVO getFinishRange([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardRangeVO cardRange) {
            object[] results = this.Invoke("getFinishRange", new object[] {
                        sessionId,
                        cardRange});
            return ((cardRangeVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFinishRange(string sessionId, cardRangeVO cardRange, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFinishRange", new object[] {
                        sessionId,
                        cardRange}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardRangeVO EndgetFinishRange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardRangeVO)(results[0]));
        }
        
        /// <remarks/>
        public void getFinishRangeAsync(string sessionId, cardRangeVO cardRange) {
            this.getFinishRangeAsync(sessionId, cardRange, null);
        }
        
        /// <remarks/>
        public void getFinishRangeAsync(string sessionId, cardRangeVO cardRange, object userState) {
            if ((this.getFinishRangeOperationCompleted == null)) {
                this.getFinishRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFinishRangeOperationCompleted);
            }
            this.InvokeAsync("getFinishRange", new object[] {
                        sessionId,
                        cardRange}, this.getFinishRangeOperationCompleted, userState);
        }
        
        private void OngetFinishRangeOperationCompleted(object arg) {
            if ((this.getFinishRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFinishRangeCompleted(this, new getFinishRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public creditAccountTransVO[] getCardCreditHistory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampPeriod period) {
            object[] results = this.Invoke("getCardCreditHistory", new object[] {
                        sessionId,
                        card,
                        period});
            return ((creditAccountTransVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardCreditHistory(string sessionId, cardVO card, timestampPeriod period, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardCreditHistory", new object[] {
                        sessionId,
                        card,
                        period}, callback, asyncState);
        }
        
        /// <remarks/>
        public creditAccountTransVO[] EndgetCardCreditHistory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((creditAccountTransVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getCardCreditHistoryAsync(string sessionId, cardVO card, timestampPeriod period) {
            this.getCardCreditHistoryAsync(sessionId, card, period, null);
        }
        
        /// <remarks/>
        public void getCardCreditHistoryAsync(string sessionId, cardVO card, timestampPeriod period, object userState) {
            if ((this.getCardCreditHistoryOperationCompleted == null)) {
                this.getCardCreditHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardCreditHistoryOperationCompleted);
            }
            this.InvokeAsync("getCardCreditHistory", new object[] {
                        sessionId,
                        card,
                        period}, this.getCardCreditHistoryOperationCompleted, userState);
        }
        
        private void OngetCardCreditHistoryOperationCompleted(object arg) {
            if ((this.getCardCreditHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardCreditHistoryCompleted(this, new getCardCreditHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO setExpirationDate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime expirationDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool expirationDateSpecified) {
            object[] results = this.Invoke("setExpirationDate", new object[] {
                        sessionId,
                        card,
                        expirationDate,
                        expirationDateSpecified});
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetExpirationDate(string sessionId, cardVO card, System.DateTime expirationDate, bool expirationDateSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setExpirationDate", new object[] {
                        sessionId,
                        card,
                        expirationDate,
                        expirationDateSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO EndsetExpirationDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public void setExpirationDateAsync(string sessionId, cardVO card, System.DateTime expirationDate, bool expirationDateSpecified) {
            this.setExpirationDateAsync(sessionId, card, expirationDate, expirationDateSpecified, null);
        }
        
        /// <remarks/>
        public void setExpirationDateAsync(string sessionId, cardVO card, System.DateTime expirationDate, bool expirationDateSpecified, object userState) {
            if ((this.setExpirationDateOperationCompleted == null)) {
                this.setExpirationDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetExpirationDateOperationCompleted);
            }
            this.InvokeAsync("setExpirationDate", new object[] {
                        sessionId,
                        card,
                        expirationDate,
                        expirationDateSpecified}, this.setExpirationDateOperationCompleted, userState);
        }
        
        private void OnsetExpirationDateOperationCompleted(object arg) {
            if ((this.setExpirationDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setExpirationDateCompleted(this, new setExpirationDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardRangeVO[] getCardRanges([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardTypeVO cardType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("getCardRanges", new object[] {
                        sessionId,
                        cardType,
                        start,
                        startSpecified,
                        count,
                        countSpecified});
            return ((cardRangeVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardRanges(string sessionId, cardTypeVO cardType, int start, bool startSpecified, int count, bool countSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardRanges", new object[] {
                        sessionId,
                        cardType,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardRangeVO[] EndgetCardRanges(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardRangeVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getCardRangesAsync(string sessionId, cardTypeVO cardType, int start, bool startSpecified, int count, bool countSpecified) {
            this.getCardRangesAsync(sessionId, cardType, start, startSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void getCardRangesAsync(string sessionId, cardTypeVO cardType, int start, bool startSpecified, int count, bool countSpecified, object userState) {
            if ((this.getCardRangesOperationCompleted == null)) {
                this.getCardRangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardRangesOperationCompleted);
            }
            this.InvokeAsync("getCardRanges", new object[] {
                        sessionId,
                        cardType,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, this.getCardRangesOperationCompleted, userState);
        }
        
        private void OngetCardRangesOperationCompleted(object arg) {
            if ((this.getCardRangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardRangesCompleted(this, new getCardRangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bonusAccountTypeVO[] getAllBonusTypes([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
            object[] results = this.Invoke("getAllBonusTypes", new object[] {
                        sessionId});
            return ((bonusAccountTypeVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAllBonusTypes(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAllBonusTypes", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bonusAccountTypeVO[] EndgetAllBonusTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bonusAccountTypeVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllBonusTypesAsync(string sessionId) {
            this.getAllBonusTypesAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void getAllBonusTypesAsync(string sessionId, object userState) {
            if ((this.getAllBonusTypesOperationCompleted == null)) {
                this.getAllBonusTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllBonusTypesOperationCompleted);
            }
            this.InvokeAsync("getAllBonusTypes", new object[] {
                        sessionId}, this.getAllBonusTypesOperationCompleted, userState);
        }
        
        private void OngetAllBonusTypesOperationCompleted(object arg) {
            if ((this.getAllBonusTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllBonusTypesCompleted(this, new getAllBonusTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public creditAccountVO getCreditAccountByCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card) {
            object[] results = this.Invoke("getCreditAccountByCard", new object[] {
                        sessionId,
                        card});
            return ((creditAccountVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCreditAccountByCard(string sessionId, cardVO card, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCreditAccountByCard", new object[] {
                        sessionId,
                        card}, callback, asyncState);
        }
        
        /// <remarks/>
        public creditAccountVO EndgetCreditAccountByCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((creditAccountVO)(results[0]));
        }
        
        /// <remarks/>
        public void getCreditAccountByCardAsync(string sessionId, cardVO card) {
            this.getCreditAccountByCardAsync(sessionId, card, null);
        }
        
        /// <remarks/>
        public void getCreditAccountByCardAsync(string sessionId, cardVO card, object userState) {
            if ((this.getCreditAccountByCardOperationCompleted == null)) {
                this.getCreditAccountByCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCreditAccountByCardOperationCompleted);
            }
            this.InvokeAsync("getCreditAccountByCard", new object[] {
                        sessionId,
                        card}, this.getCreditAccountByCardOperationCompleted, userState);
        }
        
        private void OngetCreditAccountByCardOperationCompleted(object arg) {
            if ((this.getCreditAccountByCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCreditAccountByCardCompleted(this, new getCreditAccountByCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getCardCreditHistoryForPrint([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampPeriod period) {
            object[] results = this.Invoke("getCardCreditHistoryForPrint", new object[] {
                        sessionId,
                        card,
                        period});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardCreditHistoryForPrint(string sessionId, cardVO card, timestampPeriod period, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardCreditHistoryForPrint", new object[] {
                        sessionId,
                        card,
                        period}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetCardCreditHistoryForPrint(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCardCreditHistoryForPrintAsync(string sessionId, cardVO card, timestampPeriod period) {
            this.getCardCreditHistoryForPrintAsync(sessionId, card, period, null);
        }
        
        /// <remarks/>
        public void getCardCreditHistoryForPrintAsync(string sessionId, cardVO card, timestampPeriod period, object userState) {
            if ((this.getCardCreditHistoryForPrintOperationCompleted == null)) {
                this.getCardCreditHistoryForPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardCreditHistoryForPrintOperationCompleted);
            }
            this.InvokeAsync("getCardCreditHistoryForPrint", new object[] {
                        sessionId,
                        card,
                        period}, this.getCardCreditHistoryForPrintOperationCompleted, userState);
        }
        
        private void OngetCardCreditHistoryForPrintOperationCompleted(object arg) {
            if ((this.getCardCreditHistoryForPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardCreditHistoryForPrintCompleted(this, new getCardCreditHistoryForPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public presentCardsVO createPresentCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] presentCardsVO cards) {
            object[] results = this.Invoke("createPresentCards", new object[] {
                        sessionId,
                        cards});
            return ((presentCardsVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreatePresentCards(string sessionId, presentCardsVO cards, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createPresentCards", new object[] {
                        sessionId,
                        cards}, callback, asyncState);
        }
        
        /// <remarks/>
        public presentCardsVO EndcreatePresentCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((presentCardsVO)(results[0]));
        }
        
        /// <remarks/>
        public void createPresentCardsAsync(string sessionId, presentCardsVO cards) {
            this.createPresentCardsAsync(sessionId, cards, null);
        }
        
        /// <remarks/>
        public void createPresentCardsAsync(string sessionId, presentCardsVO cards, object userState) {
            if ((this.createPresentCardsOperationCompleted == null)) {
                this.createPresentCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePresentCardsOperationCompleted);
            }
            this.InvokeAsync("createPresentCards", new object[] {
                        sessionId,
                        cards}, this.createPresentCardsOperationCompleted, userState);
        }
        
        private void OncreatePresentCardsOperationCompleted(object arg) {
            if ((this.createPresentCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPresentCardsCompleted(this, new createPresentCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeCardType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardTypeVO cardType) {
            this.Invoke("removeCardType", new object[] {
                        sessionId,
                        cardType});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveCardType(string sessionId, cardTypeVO cardType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeCardType", new object[] {
                        sessionId,
                        cardType}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremoveCardType(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void removeCardTypeAsync(string sessionId, cardTypeVO cardType) {
            this.removeCardTypeAsync(sessionId, cardType, null);
        }
        
        /// <remarks/>
        public void removeCardTypeAsync(string sessionId, cardTypeVO cardType, object userState) {
            if ((this.removeCardTypeOperationCompleted == null)) {
                this.removeCardTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveCardTypeOperationCompleted);
            }
            this.InvokeAsync("removeCardType", new object[] {
                        sessionId,
                        cardType}, this.removeCardTypeOperationCompleted, userState);
        }
        
        private void OnremoveCardTypeOperationCompleted(object arg) {
            if ((this.removeCardTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeCardTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public conditionChangeVO addConditionChange([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] conditionChangeVO conditionChange) {
            object[] results = this.Invoke("addConditionChange", new object[] {
                        sessionId,
                        conditionChange});
            return ((conditionChangeVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddConditionChange(string sessionId, conditionChangeVO conditionChange, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addConditionChange", new object[] {
                        sessionId,
                        conditionChange}, callback, asyncState);
        }
        
        /// <remarks/>
        public conditionChangeVO EndaddConditionChange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((conditionChangeVO)(results[0]));
        }
        
        /// <remarks/>
        public void addConditionChangeAsync(string sessionId, conditionChangeVO conditionChange) {
            this.addConditionChangeAsync(sessionId, conditionChange, null);
        }
        
        /// <remarks/>
        public void addConditionChangeAsync(string sessionId, conditionChangeVO conditionChange, object userState) {
            if ((this.addConditionChangeOperationCompleted == null)) {
                this.addConditionChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddConditionChangeOperationCompleted);
            }
            this.InvokeAsync("addConditionChange", new object[] {
                        sessionId,
                        conditionChange}, this.addConditionChangeOperationCompleted, userState);
        }
        
        private void OnaddConditionChangeOperationCompleted(object arg) {
            if ((this.addConditionChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addConditionChangeCompleted(this, new addConditionChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO changeInternalCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO oldCard, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO newCard, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cause, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string comment) {
            object[] results = this.Invoke("changeInternalCard", new object[] {
                        sessionId,
                        oldCard,
                        newCard,
                        cause,
                        comment});
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangeInternalCard(string sessionId, cardVO oldCard, cardVO newCard, string cause, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changeInternalCard", new object[] {
                        sessionId,
                        oldCard,
                        newCard,
                        cause,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO EndchangeInternalCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public void changeInternalCardAsync(string sessionId, cardVO oldCard, cardVO newCard, string cause, string comment) {
            this.changeInternalCardAsync(sessionId, oldCard, newCard, cause, comment, null);
        }
        
        /// <remarks/>
        public void changeInternalCardAsync(string sessionId, cardVO oldCard, cardVO newCard, string cause, string comment, object userState) {
            if ((this.changeInternalCardOperationCompleted == null)) {
                this.changeInternalCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeInternalCardOperationCompleted);
            }
            this.InvokeAsync("changeInternalCard", new object[] {
                        sessionId,
                        oldCard,
                        newCard,
                        cause,
                        comment}, this.changeInternalCardOperationCompleted, userState);
        }
        
        private void OnchangeInternalCardOperationCompleted(object arg) {
            if ((this.changeInternalCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeInternalCardCompleted(this, new changeInternalCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO changeInternalCardCategory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO oldCard, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO newCard, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime activationDate, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool activationDateSpecified) {
            object[] results = this.Invoke("changeInternalCardCategory", new object[] {
                        sessionId,
                        oldCard,
                        newCard,
                        activationDate,
                        activationDateSpecified});
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangeInternalCardCategory(string sessionId, cardVO oldCard, cardVO newCard, System.DateTime activationDate, bool activationDateSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changeInternalCardCategory", new object[] {
                        sessionId,
                        oldCard,
                        newCard,
                        activationDate,
                        activationDateSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO EndchangeInternalCardCategory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public void changeInternalCardCategoryAsync(string sessionId, cardVO oldCard, cardVO newCard, System.DateTime activationDate, bool activationDateSpecified) {
            this.changeInternalCardCategoryAsync(sessionId, oldCard, newCard, activationDate, activationDateSpecified, null);
        }
        
        /// <remarks/>
        public void changeInternalCardCategoryAsync(string sessionId, cardVO oldCard, cardVO newCard, System.DateTime activationDate, bool activationDateSpecified, object userState) {
            if ((this.changeInternalCardCategoryOperationCompleted == null)) {
                this.changeInternalCardCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeInternalCardCategoryOperationCompleted);
            }
            this.InvokeAsync("changeInternalCardCategory", new object[] {
                        sessionId,
                        oldCard,
                        newCard,
                        activationDate,
                        activationDateSpecified}, this.changeInternalCardCategoryOperationCompleted, userState);
        }
        
        private void OnchangeInternalCardCategoryOperationCompleted(object arg) {
            if ((this.changeInternalCardCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeInternalCardCategoryCompleted(this, new changeInternalCardCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getActionsByCardForPrint([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card) {
            object[] results = this.Invoke("getActionsByCardForPrint", new object[] {
                        sessionId,
                        card});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetActionsByCardForPrint(string sessionId, cardVO card, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getActionsByCardForPrint", new object[] {
                        sessionId,
                        card}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetActionsByCardForPrint(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getActionsByCardForPrintAsync(string sessionId, cardVO card) {
            this.getActionsByCardForPrintAsync(sessionId, card, null);
        }
        
        /// <remarks/>
        public void getActionsByCardForPrintAsync(string sessionId, cardVO card, object userState) {
            if ((this.getActionsByCardForPrintOperationCompleted == null)) {
                this.getActionsByCardForPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActionsByCardForPrintOperationCompleted);
            }
            this.InvokeAsync("getActionsByCardForPrint", new object[] {
                        sessionId,
                        card}, this.getActionsByCardForPrintOperationCompleted, userState);
        }
        
        private void OngetActionsByCardForPrintOperationCompleted(object arg) {
            if ((this.getActionsByCardForPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActionsByCardForPrintCompleted(this, new getActionsByCardForPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO[] findCardsByClient([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] clientVO client) {
            object[] results = this.Invoke("findCardsByClient", new object[] {
                        sessionId,
                        client});
            return ((cardVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfindCardsByClient(string sessionId, clientVO client, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("findCardsByClient", new object[] {
                        sessionId,
                        client}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO[] EndfindCardsByClient(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO[])(results[0]));
        }
        
        /// <remarks/>
        public void findCardsByClientAsync(string sessionId, clientVO client) {
            this.findCardsByClientAsync(sessionId, client, null);
        }
        
        /// <remarks/>
        public void findCardsByClientAsync(string sessionId, clientVO client, object userState) {
            if ((this.findCardsByClientOperationCompleted == null)) {
                this.findCardsByClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindCardsByClientOperationCompleted);
            }
            this.InvokeAsync("findCardsByClient", new object[] {
                        sessionId,
                        client}, this.findCardsByClientOperationCompleted, userState);
        }
        
        private void OnfindCardsByClientOperationCompleted(object arg) {
            if ((this.findCardsByClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findCardsByClientCompleted(this, new findCardsByClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public clientVO[] getClientsByFilter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardsFilterVO filter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("getClientsByFilter", new object[] {
                        sessionId,
                        filter,
                        start,
                        startSpecified,
                        count,
                        countSpecified});
            return ((clientVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetClientsByFilter(string sessionId, cardsFilterVO filter, int start, bool startSpecified, int count, bool countSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getClientsByFilter", new object[] {
                        sessionId,
                        filter,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public clientVO[] EndgetClientsByFilter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((clientVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getClientsByFilterAsync(string sessionId, cardsFilterVO filter, int start, bool startSpecified, int count, bool countSpecified) {
            this.getClientsByFilterAsync(sessionId, filter, start, startSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void getClientsByFilterAsync(string sessionId, cardsFilterVO filter, int start, bool startSpecified, int count, bool countSpecified, object userState) {
            if ((this.getClientsByFilterOperationCompleted == null)) {
                this.getClientsByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientsByFilterOperationCompleted);
            }
            this.InvokeAsync("getClientsByFilter", new object[] {
                        sessionId,
                        filter,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, this.getClientsByFilterOperationCompleted, userState);
        }
        
        private void OngetClientsByFilterOperationCompleted(object arg) {
            if ((this.getClientsByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientsByFilterCompleted(this, new getClientsByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO setClientToCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] clientVO client) {
            object[] results = this.Invoke("setClientToCard", new object[] {
                        sessionId,
                        card,
                        client});
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetClientToCard(string sessionId, cardVO card, clientVO client, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setClientToCard", new object[] {
                        sessionId,
                        card,
                        client}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO EndsetClientToCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO)(results[0]));
        }
        
        /// <remarks/>
        public void setClientToCardAsync(string sessionId, cardVO card, clientVO client) {
            this.setClientToCardAsync(sessionId, card, client, null);
        }
        
        /// <remarks/>
        public void setClientToCardAsync(string sessionId, cardVO card, clientVO client, object userState) {
            if ((this.setClientToCardOperationCompleted == null)) {
                this.setClientToCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetClientToCardOperationCompleted);
            }
            this.InvokeAsync("setClientToCard", new object[] {
                        sessionId,
                        card,
                        client}, this.setClientToCardOperationCompleted, userState);
        }
        
        private void OnsetClientToCardOperationCompleted(object arg) {
            if ((this.setClientToCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setClientToCardCompleted(this, new setClientToCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeBonusType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bonusAccountTypeVO bonusAccountType) {
            this.Invoke("removeBonusType", new object[] {
                        sessionId,
                        bonusAccountType});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveBonusType(string sessionId, bonusAccountTypeVO bonusAccountType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeBonusType", new object[] {
                        sessionId,
                        bonusAccountType}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremoveBonusType(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void removeBonusTypeAsync(string sessionId, bonusAccountTypeVO bonusAccountType) {
            this.removeBonusTypeAsync(sessionId, bonusAccountType, null);
        }
        
        /// <remarks/>
        public void removeBonusTypeAsync(string sessionId, bonusAccountTypeVO bonusAccountType, object userState) {
            if ((this.removeBonusTypeOperationCompleted == null)) {
                this.removeBonusTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveBonusTypeOperationCompleted);
            }
            this.InvokeAsync("removeBonusType", new object[] {
                        sessionId,
                        bonusAccountType}, this.removeBonusTypeOperationCompleted, userState);
        }
        
        private void OnremoveBonusTypeOperationCompleted(object arg) {
            if ((this.removeBonusTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeBonusTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getOperationsByCardForPrint([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampPeriod period) {
            object[] results = this.Invoke("getOperationsByCardForPrint", new object[] {
                        sessionId,
                        card,
                        period});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetOperationsByCardForPrint(string sessionId, cardVO card, timestampPeriod period, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getOperationsByCardForPrint", new object[] {
                        sessionId,
                        card,
                        period}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetOperationsByCardForPrint(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOperationsByCardForPrintAsync(string sessionId, cardVO card, timestampPeriod period) {
            this.getOperationsByCardForPrintAsync(sessionId, card, period, null);
        }
        
        /// <remarks/>
        public void getOperationsByCardForPrintAsync(string sessionId, cardVO card, timestampPeriod period, object userState) {
            if ((this.getOperationsByCardForPrintOperationCompleted == null)) {
                this.getOperationsByCardForPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOperationsByCardForPrintOperationCompleted);
            }
            this.InvokeAsync("getOperationsByCardForPrint", new object[] {
                        sessionId,
                        card,
                        period}, this.getOperationsByCardForPrintOperationCompleted, userState);
        }
        
        private void OngetOperationsByCardForPrintOperationCompleted(object arg) {
            if ((this.getOperationsByCardForPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOperationsByCardForPrintCompleted(this, new getOperationsByCardForPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void changePresentCardRangeStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardStatus status, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool statusSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cause, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string comment, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] userVO user) {
            this.Invoke("changePresentCardRangeStatus", new object[] {
                        sessionId,
                        start,
                        count,
                        countSpecified,
                        status,
                        statusSpecified,
                        cause,
                        comment,
                        user});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangePresentCardRangeStatus(string sessionId, string start, long count, bool countSpecified, cardStatus status, bool statusSpecified, string cause, string comment, userVO user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changePresentCardRangeStatus", new object[] {
                        sessionId,
                        start,
                        count,
                        countSpecified,
                        status,
                        statusSpecified,
                        cause,
                        comment,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndchangePresentCardRangeStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void changePresentCardRangeStatusAsync(string sessionId, string start, long count, bool countSpecified, cardStatus status, bool statusSpecified, string cause, string comment, userVO user) {
            this.changePresentCardRangeStatusAsync(sessionId, start, count, countSpecified, status, statusSpecified, cause, comment, user, null);
        }
        
        /// <remarks/>
        public void changePresentCardRangeStatusAsync(string sessionId, string start, long count, bool countSpecified, cardStatus status, bool statusSpecified, string cause, string comment, userVO user, object userState) {
            if ((this.changePresentCardRangeStatusOperationCompleted == null)) {
                this.changePresentCardRangeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePresentCardRangeStatusOperationCompleted);
            }
            this.InvokeAsync("changePresentCardRangeStatus", new object[] {
                        sessionId,
                        start,
                        count,
                        countSpecified,
                        status,
                        statusSpecified,
                        cause,
                        comment,
                        user}, this.changePresentCardRangeStatusOperationCompleted, userState);
        }
        
        private void OnchangePresentCardRangeStatusOperationCompleted(object arg) {
            if ((this.changePresentCardRangeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePresentCardRangeStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public internalCardsVO createInternalCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] internalCardsVO cards) {
            object[] results = this.Invoke("createInternalCards", new object[] {
                        sessionId,
                        cards});
            return ((internalCardsVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateInternalCards(string sessionId, internalCardsVO cards, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createInternalCards", new object[] {
                        sessionId,
                        cards}, callback, asyncState);
        }
        
        /// <remarks/>
        public internalCardsVO EndcreateInternalCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((internalCardsVO)(results[0]));
        }
        
        /// <remarks/>
        public void createInternalCardsAsync(string sessionId, internalCardsVO cards) {
            this.createInternalCardsAsync(sessionId, cards, null);
        }
        
        /// <remarks/>
        public void createInternalCardsAsync(string sessionId, internalCardsVO cards, object userState) {
            if ((this.createInternalCardsOperationCompleted == null)) {
                this.createInternalCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateInternalCardsOperationCompleted);
            }
            this.InvokeAsync("createInternalCards", new object[] {
                        sessionId,
                        cards}, this.createInternalCardsOperationCompleted, userState);
        }
        
        private void OncreateInternalCardsOperationCompleted(object arg) {
            if ((this.createInternalCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createInternalCardsCompleted(this, new createInternalCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void resendFailedCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cashNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cashNumberSpecified) {
            this.Invoke("resendFailedCards", new object[] {
                        sessionId,
                        cashNumber,
                        cashNumberSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginresendFailedCards(string sessionId, int cashNumber, bool cashNumberSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("resendFailedCards", new object[] {
                        sessionId,
                        cashNumber,
                        cashNumberSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndresendFailedCards(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void resendFailedCardsAsync(string sessionId, int cashNumber, bool cashNumberSpecified) {
            this.resendFailedCardsAsync(sessionId, cashNumber, cashNumberSpecified, null);
        }
        
        /// <remarks/>
        public void resendFailedCardsAsync(string sessionId, int cashNumber, bool cashNumberSpecified, object userState) {
            if ((this.resendFailedCardsOperationCompleted == null)) {
                this.resendFailedCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresendFailedCardsOperationCompleted);
            }
            this.InvokeAsync("resendFailedCards", new object[] {
                        sessionId,
                        cashNumber,
                        cashNumberSpecified}, this.resendFailedCardsOperationCompleted, userState);
        }
        
        private void OnresendFailedCardsOperationCompleted(object arg) {
            if ((this.resendFailedCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resendFailedCardsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bonusAccountTransVO[] getCardBonusHistory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO card, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampPeriod period) {
            object[] results = this.Invoke("getCardBonusHistory", new object[] {
                        sessionId,
                        card,
                        period});
            return ((bonusAccountTransVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardBonusHistory(string sessionId, cardVO card, timestampPeriod period, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardBonusHistory", new object[] {
                        sessionId,
                        card,
                        period}, callback, asyncState);
        }
        
        /// <remarks/>
        public bonusAccountTransVO[] EndgetCardBonusHistory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bonusAccountTransVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getCardBonusHistoryAsync(string sessionId, cardVO card, timestampPeriod period) {
            this.getCardBonusHistoryAsync(sessionId, card, period, null);
        }
        
        /// <remarks/>
        public void getCardBonusHistoryAsync(string sessionId, cardVO card, timestampPeriod period, object userState) {
            if ((this.getCardBonusHistoryOperationCompleted == null)) {
                this.getCardBonusHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardBonusHistoryOperationCompleted);
            }
            this.InvokeAsync("getCardBonusHistory", new object[] {
                        sessionId,
                        card,
                        period}, this.getCardBonusHistoryOperationCompleted, userState);
        }
        
        private void OngetCardBonusHistoryOperationCompleted(object arg) {
            if ((this.getCardBonusHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardBonusHistoryCompleted(this, new getCardBonusHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardsModuleObjectVO[] getCardsNotLoadedToCash([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cashNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cashNumberSpecified) {
            object[] results = this.Invoke("getCardsNotLoadedToCash", new object[] {
                        sessionId,
                        cashNumber,
                        cashNumberSpecified});
            return ((cardsModuleObjectVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardsNotLoadedToCash(string sessionId, int cashNumber, bool cashNumberSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardsNotLoadedToCash", new object[] {
                        sessionId,
                        cashNumber,
                        cashNumberSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardsModuleObjectVO[] EndgetCardsNotLoadedToCash(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardsModuleObjectVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getCardsNotLoadedToCashAsync(string sessionId, int cashNumber, bool cashNumberSpecified) {
            this.getCardsNotLoadedToCashAsync(sessionId, cashNumber, cashNumberSpecified, null);
        }
        
        /// <remarks/>
        public void getCardsNotLoadedToCashAsync(string sessionId, int cashNumber, bool cashNumberSpecified, object userState) {
            if ((this.getCardsNotLoadedToCashOperationCompleted == null)) {
                this.getCardsNotLoadedToCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardsNotLoadedToCashOperationCompleted);
            }
            this.InvokeAsync("getCardsNotLoadedToCash", new object[] {
                        sessionId,
                        cashNumber,
                        cashNumberSpecified}, this.getCardsNotLoadedToCashOperationCompleted, userState);
        }
        
        private void OngetCardsNotLoadedToCashOperationCompleted(object arg) {
            if ((this.getCardsNotLoadedToCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardsNotLoadedToCashCompleted(this, new getCardsNotLoadedToCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeCardRange([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardRangeVO cardRange) {
            this.Invoke("removeCardRange", new object[] {
                        sessionId,
                        cardRange});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveCardRange(string sessionId, cardRangeVO cardRange, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeCardRange", new object[] {
                        sessionId,
                        cardRange}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremoveCardRange(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void removeCardRangeAsync(string sessionId, cardRangeVO cardRange) {
            this.removeCardRangeAsync(sessionId, cardRange, null);
        }
        
        /// <remarks/>
        public void removeCardRangeAsync(string sessionId, cardRangeVO cardRange, object userState) {
            if ((this.removeCardRangeOperationCompleted == null)) {
                this.removeCardRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveCardRangeOperationCompleted);
            }
            this.InvokeAsync("removeCardRange", new object[] {
                        sessionId,
                        cardRange}, this.removeCardRangeOperationCompleted, userState);
        }
        
        private void OnremoveCardRangeOperationCompleted(object arg) {
            if ((this.removeCardRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeCardRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardRangeVO addCardRange([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardRangeVO cardRange) {
            object[] results = this.Invoke("addCardRange", new object[] {
                        sessionId,
                        cardRange});
            return ((cardRangeVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddCardRange(string sessionId, cardRangeVO cardRange, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addCardRange", new object[] {
                        sessionId,
                        cardRange}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardRangeVO EndaddCardRange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardRangeVO)(results[0]));
        }
        
        /// <remarks/>
        public void addCardRangeAsync(string sessionId, cardRangeVO cardRange) {
            this.addCardRangeAsync(sessionId, cardRange, null);
        }
        
        /// <remarks/>
        public void addCardRangeAsync(string sessionId, cardRangeVO cardRange, object userState) {
            if ((this.addCardRangeOperationCompleted == null)) {
                this.addCardRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCardRangeOperationCompleted);
            }
            this.InvokeAsync("addCardRange", new object[] {
                        sessionId,
                        cardRange}, this.addCardRangeOperationCompleted, userState);
        }
        
        private void OnaddCardRangeOperationCompleted(object arg) {
            if ((this.addCardRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCardRangeCompleted(this, new addCardRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public presentCardsVO storePresentCards([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] presentCardsVO cards) {
            object[] results = this.Invoke("storePresentCards", new object[] {
                        sessionId,
                        cards});
            return ((presentCardsVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstorePresentCards(string sessionId, presentCardsVO cards, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("storePresentCards", new object[] {
                        sessionId,
                        cards}, callback, asyncState);
        }
        
        /// <remarks/>
        public presentCardsVO EndstorePresentCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((presentCardsVO)(results[0]));
        }
        
        /// <remarks/>
        public void storePresentCardsAsync(string sessionId, presentCardsVO cards) {
            this.storePresentCardsAsync(sessionId, cards, null);
        }
        
        /// <remarks/>
        public void storePresentCardsAsync(string sessionId, presentCardsVO cards, object userState) {
            if ((this.storePresentCardsOperationCompleted == null)) {
                this.storePresentCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstorePresentCardsOperationCompleted);
            }
            this.InvokeAsync("storePresentCards", new object[] {
                        sessionId,
                        cards}, this.storePresentCardsOperationCompleted, userState);
        }
        
        private void OnstorePresentCardsOperationCompleted(object arg) {
            if ((this.storePresentCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.storePresentCardsCompleted(this, new storePresentCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeSubCardFromMainCard([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO mainCard, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardVO subCard) {
            this.Invoke("removeSubCardFromMainCard", new object[] {
                        sessionId,
                        mainCard,
                        subCard});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveSubCardFromMainCard(string sessionId, cardVO mainCard, cardVO subCard, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeSubCardFromMainCard", new object[] {
                        sessionId,
                        mainCard,
                        subCard}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremoveSubCardFromMainCard(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void removeSubCardFromMainCardAsync(string sessionId, cardVO mainCard, cardVO subCard) {
            this.removeSubCardFromMainCardAsync(sessionId, mainCard, subCard, null);
        }
        
        /// <remarks/>
        public void removeSubCardFromMainCardAsync(string sessionId, cardVO mainCard, cardVO subCard, object userState) {
            if ((this.removeSubCardFromMainCardOperationCompleted == null)) {
                this.removeSubCardFromMainCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSubCardFromMainCardOperationCompleted);
            }
            this.InvokeAsync("removeSubCardFromMainCard", new object[] {
                        sessionId,
                        mainCard,
                        subCard}, this.removeSubCardFromMainCardOperationCompleted, userState);
        }
        
        private void OnremoveSubCardFromMainCardOperationCompleted(object arg) {
            if ((this.removeSubCardFromMainCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSubCardFromMainCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO[] getCardsByFilter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] cardsFilterVO filter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("getCardsByFilter", new object[] {
                        sessionId,
                        filter,
                        start,
                        startSpecified,
                        count,
                        countSpecified});
            return ((cardVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCardsByFilter(string sessionId, cardsFilterVO filter, int start, bool startSpecified, int count, bool countSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCardsByFilter", new object[] {
                        sessionId,
                        filter,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public cardVO[] EndgetCardsByFilter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cardVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getCardsByFilterAsync(string sessionId, cardsFilterVO filter, int start, bool startSpecified, int count, bool countSpecified) {
            this.getCardsByFilterAsync(sessionId, filter, start, startSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void getCardsByFilterAsync(string sessionId, cardsFilterVO filter, int start, bool startSpecified, int count, bool countSpecified, object userState) {
            if ((this.getCardsByFilterOperationCompleted == null)) {
                this.getCardsByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardsByFilterOperationCompleted);
            }
            this.InvokeAsync("getCardsByFilter", new object[] {
                        sessionId,
                        filter,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, this.getCardsByFilterOperationCompleted, userState);
        }
        
        private void OngetCardsByFilterOperationCompleted(object arg) {
            if ((this.getCardsByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardsByFilterCompleted(this, new getCardsByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public conditionChangeVO[] getConditionChanges([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] internalCardsVO cardType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int start, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool startSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int count, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("getConditionChanges", new object[] {
                        sessionId,
                        cardType,
                        start,
                        startSpecified,
                        count,
                        countSpecified});
            return ((conditionChangeVO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetConditionChanges(string sessionId, internalCardsVO cardType, int start, bool startSpecified, int count, bool countSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getConditionChanges", new object[] {
                        sessionId,
                        cardType,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public conditionChangeVO[] EndgetConditionChanges(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((conditionChangeVO[])(results[0]));
        }
        
        /// <remarks/>
        public void getConditionChangesAsync(string sessionId, internalCardsVO cardType, int start, bool startSpecified, int count, bool countSpecified) {
            this.getConditionChangesAsync(sessionId, cardType, start, startSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void getConditionChangesAsync(string sessionId, internalCardsVO cardType, int start, bool startSpecified, int count, bool countSpecified, object userState) {
            if ((this.getConditionChangesOperationCompleted == null)) {
                this.getConditionChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConditionChangesOperationCompleted);
            }
            this.InvokeAsync("getConditionChanges", new object[] {
                        sessionId,
                        cardType,
                        start,
                        startSpecified,
                        count,
                        countSpecified}, this.getConditionChangesOperationCompleted, userState);
        }
        
        private void OngetConditionChangesOperationCompleted(object arg) {
            if ((this.getConditionChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConditionChangesCompleted(this, new getConditionChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cards.crystals.ru/", ResponseNamespace="http://cards.crystals.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public clientVO getClientInfoByCardNumber([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cardNumber) {
            object[] results = this.Invoke("getClientInfoByCardNumber", new object[] {
                        cardNumber});
            return ((clientVO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetClientInfoByCardNumber(string cardNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getClientInfoByCardNumber", new object[] {
                        cardNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public clientVO EndgetClientInfoByCardNumber(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((clientVO)(results[0]));
        }
        
        /// <remarks/>
        public void getClientInfoByCardNumberAsync(string cardNumber) {
            this.getClientInfoByCardNumberAsync(cardNumber, null);
        }
        
        /// <remarks/>
        public void getClientInfoByCardNumberAsync(string cardNumber, object userState) {
            if ((this.getClientInfoByCardNumberOperationCompleted == null)) {
                this.getClientInfoByCardNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientInfoByCardNumberOperationCompleted);
            }
            this.InvokeAsync("getClientInfoByCardNumber", new object[] {
                        cardNumber}, this.getClientInfoByCardNumberOperationCompleted, userState);
        }
        
        private void OngetClientInfoByCardNumberOperationCompleted(object arg) {
            if ((this.getClientInfoByCardNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientInfoByCardNumberCompleted(this, new getClientInfoByCardNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class userVO {
        
        private bool adAuthField;
        
        private bool blockedStatusField;
        
        private string emailField;
        
        private string firstNameField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string lastNameField;
        
        private string loginField;
        
        private string middleNameField;
        
        private string passwordField;
        
        private string positionField;
        
        private userRoleVO[] userRolesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool adAuth {
            get {
                return this.adAuthField;
            }
            set {
                this.adAuthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockedStatus {
            get {
                return this.blockedStatusField;
            }
            set {
                this.blockedStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("userRoles", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public userRoleVO[] userRoles {
            get {
                return this.userRolesField;
            }
            set {
                this.userRolesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class userRoleVO {
        
        private bool centrumField;
        
        private string guidField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private privilegeVO[] privilegeVOListField;
        
        private string roleNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool centrum {
            get {
                return this.centrumField;
            }
            set {
                this.centrumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("privilegeVOList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public privilegeVO[] privilegeVOList {
            get {
                return this.privilegeVOListField;
            }
            set {
                this.privilegeVOListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class privilegeVO {
        
        private string descriptionField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string moduleDescriptionField;
        
        private string moduleNameField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string moduleDescription {
            get {
                return this.moduleDescriptionField;
            }
            set {
                this.moduleDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string moduleName {
            get {
                return this.moduleNameField;
            }
            set {
                this.moduleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class cardsModuleObjectVO {
        
        private long objectIdField;
        
        private bool objectIdFieldSpecified;
        
        private string objectNameField;
        
        private string objectTypeField;
        
        private string reasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long objectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool objectIdSpecified {
            get {
                return this.objectIdFieldSpecified;
            }
            set {
                this.objectIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string objectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string objectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class bonusAccountTransVO {
        
        private long advertActGUIDField;
        
        private bool advertActGUIDFieldSpecified;
        
        private bonusAccountVO bonusAccountField;
        
        private long bonusAccountTransIdField;
        
        private bool bonusAccountTransIdFieldSpecified;
        
        private string bonusSumField;
        
        private string cashNumberField;
        
        private string checkField;
        
        private System.DateTime createDateField;
        
        private bool createDateFieldSpecified;
        
        private System.DateTime dateFinishActionField;
        
        private bool dateFinishActionFieldSpecified;
        
        private System.DateTime dateStartActionField;
        
        private bool dateStartActionFieldSpecified;
        
        private System.DateTime operationDateField;
        
        private bool operationDateFieldSpecified;
        
        private string shiftField;
        
        private string shopField;
        
        private string transactionTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long advertActGUID {
            get {
                return this.advertActGUIDField;
            }
            set {
                this.advertActGUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool advertActGUIDSpecified {
            get {
                return this.advertActGUIDFieldSpecified;
            }
            set {
                this.advertActGUIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bonusAccountVO bonusAccount {
            get {
                return this.bonusAccountField;
            }
            set {
                this.bonusAccountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long bonusAccountTransId {
            get {
                return this.bonusAccountTransIdField;
            }
            set {
                this.bonusAccountTransIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bonusAccountTransIdSpecified {
            get {
                return this.bonusAccountTransIdFieldSpecified;
            }
            set {
                this.bonusAccountTransIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bonusSum {
            get {
                return this.bonusSumField;
            }
            set {
                this.bonusSumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cashNumber {
            get {
                return this.cashNumberField;
            }
            set {
                this.cashNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string check {
            get {
                return this.checkField;
            }
            set {
                this.checkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createDateSpecified {
            get {
                return this.createDateFieldSpecified;
            }
            set {
                this.createDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime dateFinishAction {
            get {
                return this.dateFinishActionField;
            }
            set {
                this.dateFinishActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateFinishActionSpecified {
            get {
                return this.dateFinishActionFieldSpecified;
            }
            set {
                this.dateFinishActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime dateStartAction {
            get {
                return this.dateStartActionField;
            }
            set {
                this.dateStartActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateStartActionSpecified {
            get {
                return this.dateStartActionFieldSpecified;
            }
            set {
                this.dateStartActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime operationDate {
            get {
                return this.operationDateField;
            }
            set {
                this.operationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operationDateSpecified {
            get {
                return this.operationDateFieldSpecified;
            }
            set {
                this.operationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string shift {
            get {
                return this.shiftField;
            }
            set {
                this.shiftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string shop {
            get {
                return this.shopField;
            }
            set {
                this.shopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string transactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                this.transactionTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class bonusAccountVO {
        
        private string balanceField;
        
        private long bonusAccountIdField;
        
        private bool bonusAccountIdFieldSpecified;
        
        private bonusAccountTypeVO bonusAccountsTypeVOField;
        
        private bool enabledField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long bonusAccountId {
            get {
                return this.bonusAccountIdField;
            }
            set {
                this.bonusAccountIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bonusAccountIdSpecified {
            get {
                return this.bonusAccountIdFieldSpecified;
            }
            set {
                this.bonusAccountIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bonusAccountTypeVO bonusAccountsTypeVO {
            get {
                return this.bonusAccountsTypeVOField;
            }
            set {
                this.bonusAccountsTypeVOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class bonusAccountTypeVO {
        
        private bonusAccountsType accountsTypeField;
        
        private bool accountsTypeFieldSpecified;
        
        private long bonusAccountTypeCodeField;
        
        private bool bonusAccountTypeCodeFieldSpecified;
        
        private long bonusAccountTypeIdField;
        
        private bool bonusAccountTypeIdFieldSpecified;
        
        private string bonusAccountsTypeNameField;
        
        private long bonusCourseField;
        
        private bool bonusCourseFieldSpecified;
        
        private bonusAccountVO[] bonusListField;
        
        private long currencyCourseField;
        
        private bool currencyCourseFieldSpecified;
        
        private bool entirePurchaseField;
        
        private long maxPaymentPercentField;
        
        private bool maxPaymentPercentFieldSpecified;
        
        private bool writeOffAllAmountAtOnceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bonusAccountsType accountsType {
            get {
                return this.accountsTypeField;
            }
            set {
                this.accountsTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accountsTypeSpecified {
            get {
                return this.accountsTypeFieldSpecified;
            }
            set {
                this.accountsTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long bonusAccountTypeCode {
            get {
                return this.bonusAccountTypeCodeField;
            }
            set {
                this.bonusAccountTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bonusAccountTypeCodeSpecified {
            get {
                return this.bonusAccountTypeCodeFieldSpecified;
            }
            set {
                this.bonusAccountTypeCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long bonusAccountTypeId {
            get {
                return this.bonusAccountTypeIdField;
            }
            set {
                this.bonusAccountTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bonusAccountTypeIdSpecified {
            get {
                return this.bonusAccountTypeIdFieldSpecified;
            }
            set {
                this.bonusAccountTypeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bonusAccountsTypeName {
            get {
                return this.bonusAccountsTypeNameField;
            }
            set {
                this.bonusAccountsTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long bonusCourse {
            get {
                return this.bonusCourseField;
            }
            set {
                this.bonusCourseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bonusCourseSpecified {
            get {
                return this.bonusCourseFieldSpecified;
            }
            set {
                this.bonusCourseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bonusList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public bonusAccountVO[] bonusList {
            get {
                return this.bonusListField;
            }
            set {
                this.bonusListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long currencyCourse {
            get {
                return this.currencyCourseField;
            }
            set {
                this.currencyCourseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currencyCourseSpecified {
            get {
                return this.currencyCourseFieldSpecified;
            }
            set {
                this.currencyCourseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool entirePurchase {
            get {
                return this.entirePurchaseField;
            }
            set {
                this.entirePurchaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long maxPaymentPercent {
            get {
                return this.maxPaymentPercentField;
            }
            set {
                this.maxPaymentPercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxPaymentPercentSpecified {
            get {
                return this.maxPaymentPercentFieldSpecified;
            }
            set {
                this.maxPaymentPercentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool writeOffAllAmountAtOnce {
            get {
                return this.writeOffAllAmountAtOnceField;
            }
            set {
                this.writeOffAllAmountAtOnceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum bonusAccountsType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Money,
        
        /// <remarks/>
        Goods,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class cardsFilterVO {
        
        private System.DateTime birthDateField;
        
        private bool birthDateFieldSpecified;
        
        private bool blockedField;
        
        private bool blockedFieldSpecified;
        
        private long cardTypeIdField;
        
        private bool cardTypeIdFieldSpecified;
        
        private long cashNumField;
        
        private bool cashNumFieldSpecified;
        
        private long checkNumField;
        
        private bool checkNumFieldSpecified;
        
        private long clientIdField;
        
        private bool clientIdFieldSpecified;
        
        private string firstNameField;
        
        private long gangNumField;
        
        private bool gangNumFieldSpecified;
        
        private string lastNameField;
        
        private string middleNameField;
        
        private string numberField;
        
        private string phoneField;
        
        private long shopIndexField;
        
        private bool shopIndexFieldSpecified;
        
        private bool showOnlyDeferredClientField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime birthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool birthDateSpecified {
            get {
                return this.birthDateFieldSpecified;
            }
            set {
                this.birthDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blocked {
            get {
                return this.blockedField;
            }
            set {
                this.blockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool blockedSpecified {
            get {
                return this.blockedFieldSpecified;
            }
            set {
                this.blockedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long cardTypeId {
            get {
                return this.cardTypeIdField;
            }
            set {
                this.cardTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cardTypeIdSpecified {
            get {
                return this.cardTypeIdFieldSpecified;
            }
            set {
                this.cardTypeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long cashNum {
            get {
                return this.cashNumField;
            }
            set {
                this.cashNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cashNumSpecified {
            get {
                return this.cashNumFieldSpecified;
            }
            set {
                this.cashNumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long checkNum {
            get {
                return this.checkNumField;
            }
            set {
                this.checkNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool checkNumSpecified {
            get {
                return this.checkNumFieldSpecified;
            }
            set {
                this.checkNumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long clientId {
            get {
                return this.clientIdField;
            }
            set {
                this.clientIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clientIdSpecified {
            get {
                return this.clientIdFieldSpecified;
            }
            set {
                this.clientIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long gangNum {
            get {
                return this.gangNumField;
            }
            set {
                this.gangNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gangNumSpecified {
            get {
                return this.gangNumFieldSpecified;
            }
            set {
                this.gangNumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long shopIndex {
            get {
                return this.shopIndexField;
            }
            set {
                this.shopIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shopIndexSpecified {
            get {
                return this.shopIndexFieldSpecified;
            }
            set {
                this.shopIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool showOnlyDeferredClient {
            get {
                return this.showOnlyDeferredClientField;
            }
            set {
                this.showOnlyDeferredClientField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class creditAccountTransVO {
        
        private string cashNumberField;
        
        private long creditAccountTransIdField;
        
        private bool creditAccountTransIdFieldSpecified;
        
        private creditAccountVO creditAccountsField;
        
        private System.DateTime operationDateField;
        
        private bool operationDateFieldSpecified;
        
        private System.DateTime operationTimeField;
        
        private bool operationTimeFieldSpecified;
        
        private operationType operationTypeField;
        
        private bool operationTypeFieldSpecified;
        
        private long receiptIdField;
        
        private bool receiptIdFieldSpecified;
        
        private long receiptSumField;
        
        private bool receiptSumFieldSpecified;
        
        private long remainAccountField;
        
        private bool remainAccountFieldSpecified;
        
        private string shopField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cashNumber {
            get {
                return this.cashNumberField;
            }
            set {
                this.cashNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long creditAccountTransId {
            get {
                return this.creditAccountTransIdField;
            }
            set {
                this.creditAccountTransIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creditAccountTransIdSpecified {
            get {
                return this.creditAccountTransIdFieldSpecified;
            }
            set {
                this.creditAccountTransIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public creditAccountVO creditAccounts {
            get {
                return this.creditAccountsField;
            }
            set {
                this.creditAccountsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime operationDate {
            get {
                return this.operationDateField;
            }
            set {
                this.operationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operationDateSpecified {
            get {
                return this.operationDateFieldSpecified;
            }
            set {
                this.operationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime operationTime {
            get {
                return this.operationTimeField;
            }
            set {
                this.operationTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operationTimeSpecified {
            get {
                return this.operationTimeFieldSpecified;
            }
            set {
                this.operationTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public operationType operationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operationTypeSpecified {
            get {
                return this.operationTypeFieldSpecified;
            }
            set {
                this.operationTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long receiptId {
            get {
                return this.receiptIdField;
            }
            set {
                this.receiptIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool receiptIdSpecified {
            get {
                return this.receiptIdFieldSpecified;
            }
            set {
                this.receiptIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long receiptSum {
            get {
                return this.receiptSumField;
            }
            set {
                this.receiptSumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool receiptSumSpecified {
            get {
                return this.receiptSumFieldSpecified;
            }
            set {
                this.receiptSumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long remainAccount {
            get {
                return this.remainAccountField;
            }
            set {
                this.remainAccountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remainAccountSpecified {
            get {
                return this.remainAccountFieldSpecified;
            }
            set {
                this.remainAccountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string shop {
            get {
                return this.shopField;
            }
            set {
                this.shopField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class creditAccountVO {
        
        private long balanceField;
        
        private bool balanceFieldSpecified;
        
        private long creditAccountsIdField;
        
        private bool creditAccountsIdFieldSpecified;
        
        private long creditLimitField;
        
        private bool creditLimitFieldSpecified;
        
        private bool enabledField;
        
        private bool personalLimitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool balanceSpecified {
            get {
                return this.balanceFieldSpecified;
            }
            set {
                this.balanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long creditAccountsId {
            get {
                return this.creditAccountsIdField;
            }
            set {
                this.creditAccountsIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creditAccountsIdSpecified {
            get {
                return this.creditAccountsIdFieldSpecified;
            }
            set {
                this.creditAccountsIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long creditLimit {
            get {
                return this.creditLimitField;
            }
            set {
                this.creditLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creditLimitSpecified {
            get {
                return this.creditLimitFieldSpecified;
            }
            set {
                this.creditLimitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool personalLimit {
            get {
                return this.personalLimitField;
            }
            set {
                this.personalLimitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum operationType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Charge,
        
        /// <remarks/>
        Repayment,
        
        /// <remarks/>
        WriteOff,
        
        /// <remarks/>
        ChangeCategory,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class cardStatusResponce {
        
        private string cardNumberField;
        
        private cardStatus cardStatusField;
        
        private bool cardStatusFieldSpecified;
        
        private cardTypes cardTypesField;
        
        private bool cardTypesFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardStatus cardStatus {
            get {
                return this.cardStatusField;
            }
            set {
                this.cardStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cardStatusSpecified {
            get {
                return this.cardStatusFieldSpecified;
            }
            set {
                this.cardStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardTypes cardTypes {
            get {
                return this.cardTypesField;
            }
            set {
                this.cardTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cardTypesSpecified {
            get {
                return this.cardTypesFieldSpecified;
            }
            set {
                this.cardTypesFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum cardStatus {
        
        /// <remarks/>
        Create,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Blocked,
        
        /// <remarks/>
        Inactive,
        
        /// <remarks/>
        Used,
        
        /// <remarks/>
        PreActive,
        
        /// <remarks/>
        PreUsed,
        
        /// <remarks/>
        PreDeactive,
        
        /// <remarks/>
        NeedReturn,
        
        /// <remarks/>
        NeedTakeAway,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum cardTypes {
        
        /// <remarks/>
        CardNotFound,
        
        /// <remarks/>
        InternalCard,
        
        /// <remarks/>
        ExternalCard,
        
        /// <remarks/>
        PresentCard,
        
        /// <remarks/>
        BonusCard,
        
        /// <remarks/>
        CardCoupon,
        
        /// <remarks/>
        ChequeCoupon,
        
        /// <remarks/>
        ProcessingCoupon,
        
        /// <remarks/>
        UniqueCoupon,
        
        /// <remarks/>
        ExternalCoupon,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class rejectedCardVO {
        
        private string cardNumberField;
        
        private string causeOfRejectionField;
        
        private string dataTypeField;
        
        private string dateOfRejectionField;
        
        private string objectGuidField;
        
        private string objectNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string causeOfRejection {
            get {
                return this.causeOfRejectionField;
            }
            set {
                this.causeOfRejectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateOfRejection {
            get {
                return this.dateOfRejectionField;
            }
            set {
                this.dateOfRejectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string objectGuid {
            get {
                return this.objectGuidField;
            }
            set {
                this.objectGuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string objectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class productInCategoryCountVO {
        
        private int codeField;
        
        private long countField;
        
        private System.DateTime lastCalculateTimeField;
        
        private bool lastCalculateTimeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastCalculateTime {
            get {
                return this.lastCalculateTimeField;
            }
            set {
                this.lastCalculateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastCalculateTimeSpecified {
            get {
                return this.lastCalculateTimeFieldSpecified;
            }
            set {
                this.lastCalculateTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class clientFilterVO {
        
        private System.DateTime birthDateField;
        
        private bool birthDateFieldSpecified;
        
        private string emailField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string middleNameField;
        
        private string passNumberField;
        
        private string passSerieField;
        
        private string phoneField;
        
        private bool showOnlyDeferredField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime birthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool birthDateSpecified {
            get {
                return this.birthDateFieldSpecified;
            }
            set {
                this.birthDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string passNumber {
            get {
                return this.passNumberField;
            }
            set {
                this.passNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string passSerie {
            get {
                return this.passSerieField;
            }
            set {
                this.passSerieField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool showOnlyDeferred {
            get {
                return this.showOnlyDeferredField;
            }
            set {
                this.showOnlyDeferredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class presentCardsStatisticVO {
        
        private long activePresentCardsField;
        
        private bool activePresentCardsFieldSpecified;
        
        private long issuedPresentCardsField;
        
        private bool issuedPresentCardsFieldSpecified;
        
        private long usedPresentCardsField;
        
        private bool usedPresentCardsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long activePresentCards {
            get {
                return this.activePresentCardsField;
            }
            set {
                this.activePresentCardsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activePresentCardsSpecified {
            get {
                return this.activePresentCardsFieldSpecified;
            }
            set {
                this.activePresentCardsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long issuedPresentCards {
            get {
                return this.issuedPresentCardsField;
            }
            set {
                this.issuedPresentCardsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool issuedPresentCardsSpecified {
            get {
                return this.issuedPresentCardsFieldSpecified;
            }
            set {
                this.issuedPresentCardsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long usedPresentCards {
            get {
                return this.usedPresentCardsField;
            }
            set {
                this.usedPresentCardsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usedPresentCardsSpecified {
            get {
                return this.usedPresentCardsFieldSpecified;
            }
            set {
                this.usedPresentCardsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class cashExtensionVO {
        
        private long amountField;
        
        private bool amountFieldSpecified;
        
        private long failedAmountField;
        
        private bool failedAmountFieldSpecified;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private System.DateTime loadDateField;
        
        private bool loadDateFieldSpecified;
        
        private int numberField;
        
        private bool numberFieldSpecified;
        
        private int shopNumberField;
        
        private bool shopNumberFieldSpecified;
        
        private string statusField;
        
        private string templateField;
        
        private string trendField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long failedAmount {
            get {
                return this.failedAmountField;
            }
            set {
                this.failedAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool failedAmountSpecified {
            get {
                return this.failedAmountFieldSpecified;
            }
            set {
                this.failedAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime loadDate {
            get {
                return this.loadDateField;
            }
            set {
                this.loadDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadDateSpecified {
            get {
                return this.loadDateFieldSpecified;
            }
            set {
                this.loadDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberSpecified {
            get {
                return this.numberFieldSpecified;
            }
            set {
                this.numberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int shopNumber {
            get {
                return this.shopNumberField;
            }
            set {
                this.shopNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shopNumberSpecified {
            get {
                return this.shopNumberFieldSpecified;
            }
            set {
                this.shopNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string template {
            get {
                return this.templateField;
            }
            set {
                this.templateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trend {
            get {
                return this.trendField;
            }
            set {
                this.trendField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class timestampPeriod {
        
        private System.DateTime finishField;
        
        private bool finishFieldSpecified;
        
        private System.DateTime startField;
        
        private bool startFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime finish {
            get {
                return this.finishField;
            }
            set {
                this.finishField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool finishSpecified {
            get {
                return this.finishFieldSpecified;
            }
            set {
                this.finishFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startSpecified {
            get {
                return this.startFieldSpecified;
            }
            set {
                this.startFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class conditionChangeVO {
        
        private long amountField;
        
        private internalCardsVO cardCategoryField;
        
        private bool changeCardField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private intervalType intervalTypeField;
        
        private bool intervalTypeFieldSpecified;
        
        private int monthField;
        
        private bool monthFieldSpecified;
        
        private internalCardsVO newCardCategoryField;
        
        private bool oneCheckField;
        
        private string operatorMessageField;
        
        private timeRange timeRangeField;
        
        private bool timeRangeFieldSpecified;
        
        private typeOfComparison typeOfComparisonField;
        
        private bool typeOfComparisonFieldSpecified;
        
        private timestampPeriod workPeriodRangeField;
        
        private int worksPeriodField;
        
        private bool worksPeriodFieldSpecified;
        
        private periodType worksPeriodTypeField;
        
        private bool worksPeriodTypeFieldSpecified;
        
        private int yearField;
        
        private bool yearFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public internalCardsVO cardCategory {
            get {
                return this.cardCategoryField;
            }
            set {
                this.cardCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool changeCard {
            get {
                return this.changeCardField;
            }
            set {
                this.changeCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public intervalType intervalType {
            get {
                return this.intervalTypeField;
            }
            set {
                this.intervalTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intervalTypeSpecified {
            get {
                return this.intervalTypeFieldSpecified;
            }
            set {
                this.intervalTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthSpecified {
            get {
                return this.monthFieldSpecified;
            }
            set {
                this.monthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public internalCardsVO newCardCategory {
            get {
                return this.newCardCategoryField;
            }
            set {
                this.newCardCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool oneCheck {
            get {
                return this.oneCheckField;
            }
            set {
                this.oneCheckField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string operatorMessage {
            get {
                return this.operatorMessageField;
            }
            set {
                this.operatorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public timeRange timeRange {
            get {
                return this.timeRangeField;
            }
            set {
                this.timeRangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeRangeSpecified {
            get {
                return this.timeRangeFieldSpecified;
            }
            set {
                this.timeRangeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public typeOfComparison typeOfComparison {
            get {
                return this.typeOfComparisonField;
            }
            set {
                this.typeOfComparisonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeOfComparisonSpecified {
            get {
                return this.typeOfComparisonFieldSpecified;
            }
            set {
                this.typeOfComparisonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public timestampPeriod workPeriodRange {
            get {
                return this.workPeriodRangeField;
            }
            set {
                this.workPeriodRangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int worksPeriod {
            get {
                return this.worksPeriodField;
            }
            set {
                this.worksPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool worksPeriodSpecified {
            get {
                return this.worksPeriodFieldSpecified;
            }
            set {
                this.worksPeriodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public periodType worksPeriodType {
            get {
                return this.worksPeriodTypeField;
            }
            set {
                this.worksPeriodTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool worksPeriodTypeSpecified {
            get {
                return this.worksPeriodTypeFieldSpecified;
            }
            set {
                this.worksPeriodTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yearSpecified {
            get {
                return this.yearFieldSpecified;
            }
            set {
                this.yearFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class internalCardsVO : cardTypeVO {
        
        private bool accumulativeField;
        
        private bool bonusField;
        
        private conditionChangeVO[] conditionChangesField;
        
        private long creditLimitField;
        
        private bool creditLimitFieldSpecified;
        
        private bool domesticCreditField;
        
        private string finishField;
        
        private long percentageDiscountField;
        
        private bool percentageDiscountFieldSpecified;
        
        private string startField;
        
        private bool withoutFinishDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool accumulative {
            get {
                return this.accumulativeField;
            }
            set {
                this.accumulativeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool bonus {
            get {
                return this.bonusField;
            }
            set {
                this.bonusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("conditionChanges", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public conditionChangeVO[] conditionChanges {
            get {
                return this.conditionChangesField;
            }
            set {
                this.conditionChangesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long creditLimit {
            get {
                return this.creditLimitField;
            }
            set {
                this.creditLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creditLimitSpecified {
            get {
                return this.creditLimitFieldSpecified;
            }
            set {
                this.creditLimitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool domesticCredit {
            get {
                return this.domesticCreditField;
            }
            set {
                this.domesticCreditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string finish {
            get {
                return this.finishField;
            }
            set {
                this.finishField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long percentageDiscount {
            get {
                return this.percentageDiscountField;
            }
            set {
                this.percentageDiscountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool percentageDiscountSpecified {
            get {
                return this.percentageDiscountFieldSpecified;
            }
            set {
                this.percentageDiscountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool withoutFinishDate {
            get {
                return this.withoutFinishDateField;
            }
            set {
                this.withoutFinishDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(presentCardsVO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(internalCardsVO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class cardTypeVO : baseVO {
        
        private string classTypeField;
        
        private displayColor colorField;
        
        private bool deletedField;
        
        private bool deletedFieldSpecified;
        
        private long guidField;
        
        private bool guidFieldSpecified;
        
        private string nameField;
        
        private bool personalizedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string classType {
            get {
                return this.classTypeField;
            }
            set {
                this.classTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public displayColor color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deletedSpecified {
            get {
                return this.deletedFieldSpecified;
            }
            set {
                this.deletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guidSpecified {
            get {
                return this.guidFieldSpecified;
            }
            set {
                this.guidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool personalized {
            get {
                return this.personalizedField;
            }
            set {
                this.personalizedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class displayColor {
        
        private int blueField;
        
        private int greenField;
        
        private int redField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int blue {
            get {
                return this.blueField;
            }
            set {
                this.blueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int green {
            get {
                return this.greenField;
            }
            set {
                this.greenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int red {
            get {
                return this.redField;
            }
            set {
                this.redField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cardRangeVO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(actionVO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cardVO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cardTypeVO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(presentCardsVO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(internalCardsVO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clientVO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public abstract partial class baseVO {
        
        private long idField;
        
        private bool idFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class cardRangeVO : baseVO {
        
        private cardTypeVO cardTypeField;
        
        private string countField;
        
        private bool deletedField;
        
        private bool deletedFieldSpecified;
        
        private string finishField;
        
        private long guidField;
        
        private bool guidFieldSpecified;
        
        private string startField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardTypeVO cardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deletedSpecified {
            get {
                return this.deletedFieldSpecified;
            }
            set {
                this.deletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string finish {
            get {
                return this.finishField;
            }
            set {
                this.finishField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guidSpecified {
            get {
                return this.guidFieldSpecified;
            }
            set {
                this.guidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class actionVO : baseVO {
        
        private cardActions cardActionField;
        
        private bool cardActionFieldSpecified;
        
        private string cashField;
        
        private System.DateTime dateField;
        
        private bool dateFieldSpecified;
        
        private string shopField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardActions cardAction {
            get {
                return this.cardActionField;
            }
            set {
                this.cardActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cardActionSpecified {
            get {
                return this.cardActionFieldSpecified;
            }
            set {
                this.cardActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cash {
            get {
                return this.cashField;
            }
            set {
                this.cashField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string shop {
            get {
                return this.shopField;
            }
            set {
                this.shopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum cardActions {
        
        /// <remarks/>
        Create,
        
        /// <remarks/>
        Activate,
        
        /// <remarks/>
        Blocked,
        
        /// <remarks/>
        Used,
        
        /// <remarks/>
        Changed,
        
        /// <remarks/>
        Inactive,
        
        /// <remarks/>
        UNDO_USE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class cardVO : baseVO {
        
        private string accountNameField;
        
        private string accountNumberField;
        
        private System.DateTime activationDateField;
        
        private bool activationDateFieldSpecified;
        
        private long amountField;
        
        private bool amountFieldSpecified;
        
        private string barcodeField;
        
        private string blockDateField;
        
        private bool blockedField;
        
        private cardTypeVO cardTypeVOField;
        
        private clientVO clientVOField;
        
        private string counterpartyIdField;
        
        private System.DateTime createDateField;
        
        private bool createDateFieldSpecified;
        
        private bool deletedField;
        
        private bool deletedFieldSpecified;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private long guidField;
        
        private bool guidFieldSpecified;
        
        private cardVO mainCardField;
        
        private string newCardNumberField;
        
        private cardTypeVO newCardTypeField;
        
        private string numberField;
        
        private string oldCardNumberField;
        
        private bool signChangeOfCategoryCardField;
        
        private bool signExtensionCardField;
        
        private cardStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string statusDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime activationDate {
            get {
                return this.activationDateField;
            }
            set {
                this.activationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activationDateSpecified {
            get {
                return this.activationDateFieldSpecified;
            }
            set {
                this.activationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string barcode {
            get {
                return this.barcodeField;
            }
            set {
                this.barcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string blockDate {
            get {
                return this.blockDateField;
            }
            set {
                this.blockDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blocked {
            get {
                return this.blockedField;
            }
            set {
                this.blockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardTypeVO cardTypeVO {
            get {
                return this.cardTypeVOField;
            }
            set {
                this.cardTypeVOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public clientVO clientVO {
            get {
                return this.clientVOField;
            }
            set {
                this.clientVOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string counterpartyId {
            get {
                return this.counterpartyIdField;
            }
            set {
                this.counterpartyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createDateSpecified {
            get {
                return this.createDateFieldSpecified;
            }
            set {
                this.createDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deletedSpecified {
            get {
                return this.deletedFieldSpecified;
            }
            set {
                this.deletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guidSpecified {
            get {
                return this.guidFieldSpecified;
            }
            set {
                this.guidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardVO mainCard {
            get {
                return this.mainCardField;
            }
            set {
                this.mainCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newCardNumber {
            get {
                return this.newCardNumberField;
            }
            set {
                this.newCardNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardTypeVO newCardType {
            get {
                return this.newCardTypeField;
            }
            set {
                this.newCardTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string oldCardNumber {
            get {
                return this.oldCardNumberField;
            }
            set {
                this.oldCardNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool signChangeOfCategoryCard {
            get {
                return this.signChangeOfCategoryCardField;
            }
            set {
                this.signChangeOfCategoryCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool signExtensionCard {
            get {
                return this.signExtensionCardField;
            }
            set {
                this.signExtensionCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public cardStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string statusDescription {
            get {
                return this.statusDescriptionField;
            }
            set {
                this.statusDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class clientVO : baseVO {
        
        private bool autoField;
        
        private bool autoFieldSpecified;
        
        private string birthDateField;
        
        private long bonusBalanceField;
        
        private bool bonusBalanceFieldSpecified;
        
        private string childrenAgeField;
        
        private clientAddress clientAddressField;
        
        private clientType clientTypeField;
        
        private bool clientTypeFieldSpecified;
        
        private System.DateTime creationDateField;
        
        private bool creationDateFieldSpecified;
        
        private bool deletedField;
        
        private bool deletedFieldSpecified;
        
        private string emailField;
        
        private string firstNameField;
        
        private long guidField;
        
        private bool guidFieldSpecified;
        
        private bool isCompletedField;
        
        private bool isCompletedFieldSpecified;
        
        private System.DateTime lastChangeDateField;
        
        private bool lastChangeDateFieldSpecified;
        
        private string lastNameField;
        
        private bool maritalField;
        
        private bool maritalFieldSpecified;
        
        private string middleNameField;
        
        private string mobileOperatorField;
        
        private string mobilePhoneField;
        
        private passportVO passportField;
        
        private string phoneField;
        
        private sendBy sendByField;
        
        private bool sendCatalogField;
        
        private sex sexField;
        
        private bool sexFieldSpecified;
        
        private string shopNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool auto {
            get {
                return this.autoField;
            }
            set {
                this.autoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool autoSpecified {
            get {
                return this.autoFieldSpecified;
            }
            set {
                this.autoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string birthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long bonusBalance {
            get {
                return this.bonusBalanceField;
            }
            set {
                this.bonusBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bonusBalanceSpecified {
            get {
                return this.bonusBalanceFieldSpecified;
            }
            set {
                this.bonusBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string childrenAge {
            get {
                return this.childrenAgeField;
            }
            set {
                this.childrenAgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public clientAddress clientAddress {
            get {
                return this.clientAddressField;
            }
            set {
                this.clientAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public clientType clientType {
            get {
                return this.clientTypeField;
            }
            set {
                this.clientTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clientTypeSpecified {
            get {
                return this.clientTypeFieldSpecified;
            }
            set {
                this.clientTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creationDateSpecified {
            get {
                return this.creationDateFieldSpecified;
            }
            set {
                this.creationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deletedSpecified {
            get {
                return this.deletedFieldSpecified;
            }
            set {
                this.deletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guidSpecified {
            get {
                return this.guidFieldSpecified;
            }
            set {
                this.guidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isCompleted {
            get {
                return this.isCompletedField;
            }
            set {
                this.isCompletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCompletedSpecified {
            get {
                return this.isCompletedFieldSpecified;
            }
            set {
                this.isCompletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastChangeDate {
            get {
                return this.lastChangeDateField;
            }
            set {
                this.lastChangeDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastChangeDateSpecified {
            get {
                return this.lastChangeDateFieldSpecified;
            }
            set {
                this.lastChangeDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool marital {
            get {
                return this.maritalField;
            }
            set {
                this.maritalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maritalSpecified {
            get {
                return this.maritalFieldSpecified;
            }
            set {
                this.maritalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobileOperator {
            get {
                return this.mobileOperatorField;
            }
            set {
                this.mobileOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public passportVO passport {
            get {
                return this.passportField;
            }
            set {
                this.passportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sendBy sendBy {
            get {
                return this.sendByField;
            }
            set {
                this.sendByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendCatalog {
            get {
                return this.sendCatalogField;
            }
            set {
                this.sendCatalogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sex sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sexSpecified {
            get {
                return this.sexFieldSpecified;
            }
            set {
                this.sexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string shopNumber {
            get {
                return this.shopNumberField;
            }
            set {
                this.shopNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class clientAddress {
        
        private string appartmentField;
        
        private string buildingField;
        
        private string cityField;
        
        private string districtField;
        
        private string districtAreaField;
        
        private string houseField;
        
        private string otherField;
        
        private string regionField;
        
        private string streetField;
        
        private string zipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string appartment {
            get {
                return this.appartmentField;
            }
            set {
                this.appartmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string building {
            get {
                return this.buildingField;
            }
            set {
                this.buildingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string districtArea {
            get {
                return this.districtAreaField;
            }
            set {
                this.districtAreaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string house {
            get {
                return this.houseField;
            }
            set {
                this.houseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string other {
            get {
                return this.otherField;
            }
            set {
                this.otherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum clientType {
        
        /// <remarks/>
        PRIVATE,
        
        /// <remarks/>
        JURISTIC_PERSON,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class passportVO {
        
        private string deliveryField;
        
        private string deliveryDateField;
        
        private string passNumberField;
        
        private string passSerieField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deliveryDate {
            get {
                return this.deliveryDateField;
            }
            set {
                this.deliveryDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string passNumber {
            get {
                return this.passNumberField;
            }
            set {
                this.passNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string passSerie {
            get {
                return this.passSerieField;
            }
            set {
                this.passSerieField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class sendBy {
        
        private bool byEMailField;
        
        private bool byMailField;
        
        private bool byPhoneField;
        
        private bool bySMSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool byEMail {
            get {
                return this.byEMailField;
            }
            set {
                this.byEMailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool byMail {
            get {
                return this.byMailField;
            }
            set {
                this.byMailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool byPhone {
            get {
                return this.byPhoneField;
            }
            set {
                this.byPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool bySMS {
            get {
                return this.bySMSField;
            }
            set {
                this.bySMSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum sex {
        
        /// <remarks/>
        Male,
        
        /// <remarks/>
        Female,
        
        /// <remarks/>
        Not_Specified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public partial class presentCardsVO : cardTypeVO {
        
        private long amountField;
        
        private bool amountFieldSpecified;
        
        private string barcodeField;
        
        private bool fixedAmountField;
        
        private long maxAmountField;
        
        private bool maxAmountFieldSpecified;
        
        private long multiplicityField;
        
        private bool multiplicityFieldSpecified;
        
        private int validityField;
        
        private bool validityFieldSpecified;
        
        private timeUnit validityTimeUnitField;
        
        private bool validityTimeUnitFieldSpecified;
        
        private bool withoutFinishDateField;
        
        private timestampPeriod workPeriodRangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string barcode {
            get {
                return this.barcodeField;
            }
            set {
                this.barcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool fixedAmount {
            get {
                return this.fixedAmountField;
            }
            set {
                this.fixedAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long maxAmount {
            get {
                return this.maxAmountField;
            }
            set {
                this.maxAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxAmountSpecified {
            get {
                return this.maxAmountFieldSpecified;
            }
            set {
                this.maxAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long multiplicity {
            get {
                return this.multiplicityField;
            }
            set {
                this.multiplicityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multiplicitySpecified {
            get {
                return this.multiplicityFieldSpecified;
            }
            set {
                this.multiplicityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int validity {
            get {
                return this.validityField;
            }
            set {
                this.validityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validitySpecified {
            get {
                return this.validityFieldSpecified;
            }
            set {
                this.validityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public timeUnit validityTimeUnit {
            get {
                return this.validityTimeUnitField;
            }
            set {
                this.validityTimeUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validityTimeUnitSpecified {
            get {
                return this.validityTimeUnitFieldSpecified;
            }
            set {
                this.validityTimeUnitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool withoutFinishDate {
            get {
                return this.withoutFinishDateField;
            }
            set {
                this.withoutFinishDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public timestampPeriod workPeriodRange {
            get {
                return this.workPeriodRangeField;
            }
            set {
                this.workPeriodRangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum timeUnit {
        
        /// <remarks/>
        DAYS,
        
        /// <remarks/>
        WEEKS,
        
        /// <remarks/>
        MONTHS,
        
        /// <remarks/>
        YEARS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum intervalType {
        
        /// <remarks/>
        ABSOLUTE,
        
        /// <remarks/>
        RELATIVE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum timeRange {
        
        /// <remarks/>
        UPTO,
        
        /// <remarks/>
        WITHIN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum typeOfComparison {
        
        /// <remarks/>
        MORE,
        
        /// <remarks/>
        LESS,
        
        /// <remarks/>
        EQUAL,
        
        /// <remarks/>
        MOREOREQUAL,
        
        /// <remarks/>
        LESSOREQUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum periodType {
        
        /// <remarks/>
        NOW,
        
        /// <remarks/>
        MINUTES,
        
        /// <remarks/>
        HOURS,
        
        /// <remarks/>
        DAYS,
        
        /// <remarks/>
        WEEKS,
        
        /// <remarks/>
        MONTHES,
        
        /// <remarks/>
        YEARS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cards.crystals.ru/")]
    public enum cardBlockingReason {
        
        /// <remarks/>
        ANOTHER,
        
        /// <remarks/>
        LOSS,
        
        /// <remarks/>
        REFUSAL,
        
        /// <remarks/>
        ROBBERY,
        
        /// <remarks/>
        CALL_SECURITY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void activatePresentCardsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void storeClientCompletedEventHandler(object sender, storeClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class storeClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal storeClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clientVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clientVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void createBonusTypeCompletedEventHandler(object sender, createBonusTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createBonusTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createBonusTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bonusAccountTypeVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bonusAccountTypeVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCashesWithNotLoadedCardsCompletedEventHandler(object sender, getCashesWithNotLoadedCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCashesWithNotLoadedCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCashesWithNotLoadedCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cashExtensionVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cashExtensionVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void addBonusTypeToInternalCardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getPresentCardsStatisticCompletedEventHandler(object sender, getPresentCardsStatisticCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPresentCardsStatisticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPresentCardsStatisticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public presentCardsStatisticVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((presentCardsStatisticVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardsByTypeCompletedEventHandler(object sender, getCardsByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardsByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardsByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getClientsCompletedEventHandler(object sender, getClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clientVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clientVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getBonusTypesByInternalCardCompletedEventHandler(object sender, getBonusTypesByInternalCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBonusTypesByInternalCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBonusTypesByInternalCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bonusAccountTypeVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bonusAccountTypeVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getBonusAccountsByCardCompletedEventHandler(object sender, getBonusAccountsByCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBonusAccountsByCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBonusAccountsByCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bonusAccountVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bonusAccountVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void storeBonusTypeCompletedEventHandler(object sender, storeBonusTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class storeBonusTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal storeBonusTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bonusAccountTypeVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bonusAccountTypeVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardsCountsCompletedEventHandler(object sender, getCardsCountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardsCountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardsCountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public productInCategoryCountVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((productInCategoryCountVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void changePresentCardCompletedEventHandler(object sender, changePresentCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePresentCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePresentCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void blockCardCompletedEventHandler(object sender, blockCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class blockCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal blockCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getRejectedCardsCompletedEventHandler(object sender, getRejectedCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRejectedCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRejectedCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rejectedCardVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rejectedCardVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void removeBonusTypeFromInternalCardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void setPersonalLimitCompletedEventHandler(object sender, setPersonalLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPersonalLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setPersonalLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public creditAccountVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((creditAccountVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getInternalCardsCompletedEventHandler(object sender, getInternalCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInternalCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInternalCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public internalCardsVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((internalCardsVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCountDeferredClientsCompletedEventHandler(object sender, getCountDeferredClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountDeferredClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountDeferredClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void cleanRejectedCardsCompletedEventHandler(object sender, cleanRejectedCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cleanRejectedCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cleanRejectedCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardStatusCompletedEventHandler(object sender, getCardStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardStatusResponce Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardStatusResponce)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void createNewCardCompletedEventHandler(object sender, createNewCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getActionsByCardCompletedEventHandler(object sender, getActionsByCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActionsByCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActionsByCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public actionVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((actionVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void storeInternalCardsCompletedEventHandler(object sender, storeInternalCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class storeInternalCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal storeInternalCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public internalCardsVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((internalCardsVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void removeConditionChangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void addClientAndSetToCardCompletedEventHandler(object sender, addClientAndSetToCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addClientAndSetToCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addClientAndSetToCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getPresentCardsCompletedEventHandler(object sender, getPresentCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPresentCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPresentCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public presentCardsVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((presentCardsVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardBonusHistoryForPrintCompletedEventHandler(object sender, getCardBonusHistoryForPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardBonusHistoryForPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardBonusHistoryForPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getFinishRangeCompletedEventHandler(object sender, getFinishRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFinishRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFinishRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardRangeVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardRangeVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardCreditHistoryCompletedEventHandler(object sender, getCardCreditHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardCreditHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardCreditHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public creditAccountTransVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((creditAccountTransVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void setExpirationDateCompletedEventHandler(object sender, setExpirationDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setExpirationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setExpirationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardRangesCompletedEventHandler(object sender, getCardRangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardRangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardRangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardRangeVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardRangeVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getAllBonusTypesCompletedEventHandler(object sender, getAllBonusTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllBonusTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllBonusTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bonusAccountTypeVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bonusAccountTypeVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCreditAccountByCardCompletedEventHandler(object sender, getCreditAccountByCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCreditAccountByCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCreditAccountByCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public creditAccountVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((creditAccountVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardCreditHistoryForPrintCompletedEventHandler(object sender, getCardCreditHistoryForPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardCreditHistoryForPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardCreditHistoryForPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void createPresentCardsCompletedEventHandler(object sender, createPresentCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPresentCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPresentCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public presentCardsVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((presentCardsVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void removeCardTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void addConditionChangeCompletedEventHandler(object sender, addConditionChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addConditionChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addConditionChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public conditionChangeVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((conditionChangeVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void changeInternalCardCompletedEventHandler(object sender, changeInternalCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeInternalCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeInternalCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void changeInternalCardCategoryCompletedEventHandler(object sender, changeInternalCardCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeInternalCardCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeInternalCardCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getActionsByCardForPrintCompletedEventHandler(object sender, getActionsByCardForPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActionsByCardForPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActionsByCardForPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void findCardsByClientCompletedEventHandler(object sender, findCardsByClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findCardsByClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findCardsByClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getClientsByFilterCompletedEventHandler(object sender, getClientsByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientsByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientsByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clientVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clientVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void setClientToCardCompletedEventHandler(object sender, setClientToCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setClientToCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setClientToCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void removeBonusTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getOperationsByCardForPrintCompletedEventHandler(object sender, getOperationsByCardForPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOperationsByCardForPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOperationsByCardForPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void changePresentCardRangeStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void createInternalCardsCompletedEventHandler(object sender, createInternalCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createInternalCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createInternalCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public internalCardsVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((internalCardsVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void resendFailedCardsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardBonusHistoryCompletedEventHandler(object sender, getCardBonusHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardBonusHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardBonusHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bonusAccountTransVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bonusAccountTransVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardsNotLoadedToCashCompletedEventHandler(object sender, getCardsNotLoadedToCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardsNotLoadedToCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardsNotLoadedToCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardsModuleObjectVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardsModuleObjectVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void removeCardRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void addCardRangeCompletedEventHandler(object sender, addCardRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCardRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCardRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardRangeVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardRangeVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void storePresentCardsCompletedEventHandler(object sender, storePresentCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class storePresentCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal storePresentCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public presentCardsVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((presentCardsVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void removeSubCardFromMainCardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getCardsByFilterCompletedEventHandler(object sender, getCardsByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardsByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardsByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cardVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getConditionChangesCompletedEventHandler(object sender, getConditionChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConditionChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConditionChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public conditionChangeVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((conditionChangeVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getClientInfoByCardNumberCompletedEventHandler(object sender, getClientInfoByCardNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientInfoByCardNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientInfoByCardNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clientVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clientVO)(this.results[0]));
            }
        }
    }
}
